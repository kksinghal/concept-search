found the solution in existing solvers at reset_iteration 0, improve iteration 0

 def gbfeajccjacgeccdjbjiadjhfadaechb(I):
    O = I
    for i in range(len(I)):
      for j in range(len(I[0])):
        if I[i][j] == THREE:
          if any([I[k][l] == THREE for k, l in dneighbors((i, j)) if 0 <= k < len(I) and 0 <= l < len(I[0])]):
            O = fill(O, EIGHT, {(i, j)})
    return O
 
