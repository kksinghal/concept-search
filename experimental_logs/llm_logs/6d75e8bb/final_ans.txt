found the solution in existing solvers at reset_iteration 0, improve iteration 0

 def aadbaaifcdeeebbfibjdgacjacgejdhi(I):
  O = I  # Initialize the output grid
  for obj in objects(I, T, T, T): # Find all objects
    for i, j in delta(obj): # Iterate over the outline of each object
      if 0 <= i < len(I) and 0 <= j < len(I[0]):  # Boundary check
        O = fill(O, 2, {(i, j)})  # Fill the outline cells with '2'
  return O
 
