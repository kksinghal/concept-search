found the solution in existing solvers at reset_iteration 0, improve iteration 0

 def ihcffcaeghdgedcdidceeieejcahddjb(I):
  bg = mostcolor(I)
  objs = objects(I, T, T, T)
  target_cells = set()
  for i in range(len(I)):
    for j in range(len(I[0])):
      if I[i][j] != bg:
        cell = frozenset({(I[i][j], (i, j))})
        if cell not in objs:
          target_cells.add((i, j))
        elif size(extract(objs, lambda obj: (I[i][j], (i, j)) in obj)) != size(argmax(objs, size)):
          target_cells.add((i, j))
  O = fill(I, 5, frozenset(target_cells))
  return O
 
