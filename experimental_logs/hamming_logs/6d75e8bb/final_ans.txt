found the solution in existing solvers at reset_iteration 0, improve iteration 2

 def hadfceaiieajedefiaiedcdfbdcceecd(I):
  obj = argmax(objects(I, T, F, T), size) # Find largest object excluding background
  surrounding_cells = difference(backdrop(toindices(obj)), toindices(obj)) # Find cells surrounding the object
  adjacent_cells = intersection(surrounding_cells, asindices(I)) # Filter out out-of-bounds cells
  O = fill(I, 2, adjacent_cells) # Fill adjacent cells with 2
  return O
 
