0.2074074074074074, 5.103139, def dijafbgbbdjeebbficeahfacfeffabeh(I):
  objs = objects(I, T, F, T)  # Identify objects, treating background as separate
  for obj in objs:
    color_val = color(obj)
    if color_val != mostcolor(I):
      shifted_obj = shift(obj, (2, 0))  # Shift object down by two units
      I = paint(cover(I, obj), recolor(2, shifted_obj))  # Recolor and paint
  return I
 
0.14603174603174604, 14.780776, def aabdeabcgebbebfgbbiebafffeebfcae(I):
  def process_row(row): 
    filtered_row = tuple(TWO if v == EIGHT else v for v in row)  # Recolor within the row
    return (ZERO, ZERO) + filtered_row  # Shift by adding zeros at the beginning
  return tuple(process_row(row) for row in I)  # Apply to each row
 
0.2074074074074074, 6.767166, def ehdbdjabbhfbebcjbefccdafheihecfh(I):
  objs = fgpartition(I)
  shifted_objs = frozenset({(2, (i + 2*uppermost(obj), j)) 
                          for obj in objs 
                          for _, (i, j) in obj})
  O = paint(canvas(0, shape(I)), shifted_objs)
  return O
 
0.2074074074074074, 5.04159, def eecdffdcicbhejbiifdjjfefdbahfeaj(I):
  objs = fgpartition(I)
  shifted_objs = frozenset()
  for obj in objs:
    shift_amount = uppermost(obj) + size(obj) // 2 
    shifted_objs = shifted_objs | shift(recolor(2, obj), (shift_amount, 0))
  O = paint(canvas(0, shape(I)), shifted_objs)
  return O
 
0.6725925925925926, 7.537287, def faahagcgjgfcejfdibeadibciafceedd(I):
  shifted_grid = tuple(tuple(2 if I[i - (i+j)//2][j] != mostcommon(I) and i - (i+j)//2 >= 0 else 0 
                          for j in range(width(I)))
                     for i in range(height(I)))
  return shifted_grid
 
0.6192592592592593, 15.173946, def fddgfffbcjfdeghhaaijcacjaiccffjf(I):
  O = canvas(0, shape(I))
  for i, row in enumerate(I):
    for j, value in enumerate(row):
      if value != mostcommon(I):
        new_i = i + (i+1)//2
        if 0 <= new_i < height(I):
          O = paint(O, {(2, (new_i, j))})
  return O
 
0.5451851851851851, 10.562804, def biggejjfccdeeaecidiacdebbcjccfca(I):
  objs = [(i, {(v, (i, j)) for j, v in enumerate(row) if v != mostcommon(I)})
          for i, row in enumerate(I)]
  shifted_objs = frozenset({(2, (i + len(obj)//2, j)) 
                         for i, obj in objs 
                         for _, (i, j) in obj})
  O = paint(canvas(0, shape(I)), shifted_objs)
  return O
 
0.13333333333333333, 5.7314787, def fagfdddbeiececdcigbcadibbadecahh(I):
    objs = objects(I, True, False, False)
    shifted_objs = frozenset(shift(obj, (1, 0)) if size(obj) == 1 else shift(obj, (2,0)) for obj in objs if color(obj) == 8)
    O = paint(canvas(0, shape(I)), recolor(2, merge(shifted_objs)))
    return O 
 
0.0, 0.0, def acjbiafdigfaebjhbgiffajbdaaiecbb(I):
    O = canvas(0, shape(I))
    for i, row in enumerate(I):
        for j, value in enumerate(row):
            if value == 8:
                shift_amount = 2 if i + 2 < len(I) and I[i+2][j] == 8 else 1
                new_i = i + shift_amount
                if 0 <= new_i < len(O):
                    O = fill(O, 2, {(new_i, j)})
    return O
 
0.1037037037037037, 8.130373, def gbfeddgefebbecbgjjjaefjbfcebeceb(I):
    objs = objects(I, True, False, False)
    down_shifted_objs = frozenset(shift(obj, (1, 0)) for obj in objs if color(obj) == 8)
    double_down_shifted_objs = frozenset(shift(obj, (2, 0)) for obj in objs if color(obj) == 8)
    O = paint(canvas(0, shape(I)), recolor(2, merge(down_shifted_objs)))
    O = paint(O, recolor(2, merge(double_down_shifted_objs)))
    return O
 
0.0, 0.0, def ibdeagccjagdefddbbchdciacjedeeae(I):
    obj = toobject(ofcolor(I, EIGHT), I)
    shifted_obj = shift(obj, (1, 0))
    recolored_obj = recolor(TWO, shifted_obj)
    O = paint(canvas(ZERO, shape(I)), recolored_obj)
    return O
 
