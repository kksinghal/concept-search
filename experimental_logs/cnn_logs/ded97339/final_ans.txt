found the solution in existing solvers at reset_iteration 0, improve iteration 3

 def achiffaidfdcebcbbdbgceaahdaihchh(I):
  connected = I
  for i in range(len(I)):
    eights_in_row = {(a, b) for v, (a, b) in asobject(I) if v == EIGHT and a == i}
    if eights_in_row:
      connected = fill(connected, EIGHT, connect(first(eights_in_row), last(eights_in_row)))
  for j in range(len(I[0])):
    eights_in_col = {(a, b) for v, (a, b) in asobject(I) if v == EIGHT and b == j}
    if eights_in_col:
      connected = fill(connected, EIGHT, connect(first(eights_in_col), last(eights_in_col)))
  return connected
 
