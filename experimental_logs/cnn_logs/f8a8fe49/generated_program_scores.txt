14.0, 10.29517, def cacibebdbcdfeebhjbcaccbahicfejaj(I):
    obj_2 = toobject(ofcolor(I, 2), I)  # Identify the '2' object
    obj_5 = toobject(ofcolor(I, 5), I)  # Identify the '5' object
    center_2 = centerofmass(obj_2)  # Find the center of the '2' object
    shift_vector = subtract(center_2, centerofmass(obj_5))  # Calculate the shift vector
    new_obj_5 = shift(obj_5, shift_vector)  # Move the '5' object
    O = paint(cover(I, obj_5), new_obj_5)  # Update the grid 
    return O
 
13.333333333333334, 9.798196, def dcffheejeebdeeedicdbejcaheabfbad(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2)) # Extract object with color '2'
  obj5 = first(colorfilter(objects(I, T, F, T), 5)) # Extract object with color '5'
  h2 = height(obj2)  # Calculate the height of object '2'
  offset = (h2, 0)  # Define the offset to align with the bottom
  moved_obj5 = shift(obj5, offset)  # Shift object '5' 
  O = paint(cover(I, obj5), moved_obj5) # Paint the moved object onto the cleared grid
  return O 
 
14.0, 8.996196, def dfacfhfijjijeiddiijfdfedgcgfjhcb(I):
  obj2 = toindices(first(colorfilter(objects(I, T, F, T), 2)))
  obj5 = toindices(first(colorfilter(objects(I, T, F, T), 5)))
  i2_bottom = lowermost(obj2) 
  i5_top = uppermost(obj5)
  vertical_shift = i2_bottom - i5_top + 1
  moved_obj5 = shift(obj5, (vertical_shift, 0))
  O = paint(cover(I, obj5), recolor(5, moved_obj5))
  return O
 
14.0, 11.884348, def cdheacaacihceecaiadhehehdabihhaf(I):
  objs = objects(I, T, F, T)
  obj2, obj5 = first(colorfilter(objs, 2)), first(colorfilter(objs, 5))
  c2, c5 = centerofmass(obj2), centerofmass(obj5)
  shift_amount = subtract(c2, c5)
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.0, 8.588986, def ebcicabbdgbiefaabfcffjefieefgaai(I):
  objs = objects(I, T, F, T)
  obj2, obj5 = first(colorfilter(objs, 2)), first(colorfilter(objs, 5))
  rel_pos = position(obj5, obj2)
  target_pos = add(ulcorner(obj2), (height(obj2), 0)) # Target position is below obj2
  current_pos = ulcorner(obj5) 
  shift_amount = subtract(target_pos, current_pos)
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.0, 11.059639, def hfbhabbbaabcedidjeaacfbcgghaadba(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  grav_shift = gravitate(obj5, obj2)
  final_shift = add(grav_shift, (1, 0))  # Adjust for one extra row below
  shifted_obj5 = shift(obj5, final_shift)
  O = paint(cover(I, obj5), shifted_obj5) 
  return O
 
14.0, 10.279154, def adbhhdcbfcahefgabahcdeeefefdahjb(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  five_height = height(five_obj)
  two_height = height(two_obj)
  vertical_offset = (two_height - five_height) // 2
  shifted_five = shift(five_obj, (vertical_offset, 0))
  O = cover(I, five_obj)
  O = paint(O, shifted_five)
  return O
 
14.0, 9.835933, def aecdibiaidfdeeeejcdgbdjibgchggba(I):
    fives = ofcolor(I, FIVE)
    twos = ofcolor(I, TWO)
    if len(twos) > 0:  # Check if '2' object exists
        target_row = uppermost(twos)
        O = fill(I, ZERO, fives)
        O = fill(O, FIVE, shift(fives, (target_row - uppermost(fives), 0)))
    else:
        O = I  # No change if no '2' object
    return O
 
14.666666666666666, 10.629769, def jabfgeaddheaejidjdgiicahefeacfei(I):
    obj_five = ofcolor(I, FIVE)
    obj_two = ofcolor(I, TWO)
    if obj_two:  # Check if '2' object exists
        left_edge = hfrontier((uppermost(obj_two), leftmost(obj_two)))
        right_edge = hfrontier((uppermost(obj_two), rightmost(obj_two)))
        O = fill(I, ZERO, obj_five)  # Clear original '5's
        O = paint(O, recolor(FIVE, intersection(left_edge, backdrop(obj_two))))  # Paint left edge
        O = paint(O, recolor(FIVE, intersection(right_edge, backdrop(obj_two))))  # Paint right edge
    else:
        O = I
    return O
 
11.333333333333334, 9.414028, def hgadafcbgidjecafjjacdcfeicbaacdj(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  ref_upper = uppermost(obj2)
  ref_left = leftmost(obj2)
  O = paint(
    cover(I, obj5), 
    shift(obj5, (ref_upper-2, ref_left - 1))
  )
  return O
 
14.0, 11.614598, def fgfdacadjddfeijhjccdaeddheiafggd(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  offset = gravitate(obj5, shift(obj2, (2, 1)))
  O = move(I, obj5, offset)
  return O
 
14.0, 10.084471, def eaegddejgbbdedffacceeijchaadeege(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  O = paint(
      cover(I, obj5), 
      shift(
          obj5, 
          (
              uppermost(obj2) - uppermost(obj5) -2, 
              leftmost(obj2) - leftmost(obj5) - 1
          )
      )
  )
  return O
 
13.333333333333334, 9.266148, def fbhaddhffhjbedfajcjhbdgjagcdacfh(I):
  five_indices = ofcolor(I, FIVE)
  moved_indices = frozenset((i + (-3 if j < 7 else 7), j + (-3 if j < 7 else -7)) for i, j in five_indices)
  O = fill(fill(I, ZERO, five_indices), FIVE, moved_indices)
  return O
 
29.333333333333332, 29.076674, def aaeaadibfabfeagbbjgaiebbdacdgdhb(I):
  five_objs = colorfilter(objects(I, True, False, False), FIVE)
  new_grid = canvas(ZERO, (15, 15))
  for obj in five_objs:
    i, j = ulcorner(obj)
    if j > 6:
      new_grid = paint(new_grid, shift(obj, (7, -7)))
    else:
      new_grid = paint(new_grid, shift(obj, (-3, -3)))
  return new_grid
 
29.666666666666668, 30.741999, def cecdbcdeaffbecadjeieaeecggdgcbdc(I):
  shifted_grid = canvas(ZERO, (15, 15))
  for i, row in enumerate(I):
    for j, val in enumerate(row):
      if val == FIVE:
        new_i = i + (-3 if j < 7 else 7)
        new_j = j + (-3 if j < 7 else -7)
        shifted_grid = fill(shifted_grid, FIVE, {(new_i, new_j)}) 
  return shifted_grid
 
14.0, 7.427784, def fhahhgaajfebeagaagfiheefceceacce(I):
    obj_2 = toobject(ofcolor(I, 2), I) 
    obj_5 = toobject(ofcolor(I, 5), I)
    ul_5 = ulcorner(obj_5) 
    ll_2 = llcorner(obj_2)
    shift_vector = subtract(ll_2, ul_5) 
    new_obj_5 = shift(obj_5, shift_vector) 
    O = paint(cover(I, obj_5), new_obj_5)  
    return O
 
14.0, 8.13531, def babdfcagfadceiacbechdjghjagbfbdf(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    leftmost_5s = frozenset((i, leftmost(obj_5)) for i in range(uppermost(obj_5), lowermost(obj_5) + 1))
    target_column = leftmost(obj_2) - 1
    shift_vector = (0, target_column - leftmost(obj_5))
    new_obj_5 = shift(obj_5, shift_vector)
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
14.0, 8.026269, def dedifbdfggcfejbebcgbidchfjjaedfc(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    leftmost_5s = frozenset((i, leftmost(obj_5)) for i in range(uppermost(obj_5), lowermost(obj_5) + 1))
    target_column = leftmost(obj_2) - 1
    shift_vector = (1, target_column - leftmost(obj_5)) 
    new_obj_5 = shift(obj_5, shift_vector)
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
11.666666666666666, 11.510078, def ajbeicafgcbbefhcjaedeafbbfcifedf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  shift_vector = subtract(llcorner(obj_2), ulcorner(obj_5))
  shift_vector = (shift_vector[0] + (height(obj_5) - 1), shift_vector[1]) 
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.583265, def ffgbchjgdheiefcdaidicbfcfchbjeeb(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    target_pos = subtract(llcorner(obj_2), (height(obj_5) - 1, 0)) 
    shift_vector = subtract(target_pos, ulcorner(obj_5))
    new_obj_5 = shift(obj_5, shift_vector)
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
13.666666666666666, 9.445383, def hacehfabeciaeabebfcccaafgbeheidf(I):
  objs = objects(I, T, F, T)  # Extract objects
  obj2, obj5 = first(colorfilter(objs, 2)), first(colorfilter(objs, 5)) # Get the objects of color 2 and 5
  h2, w2 = height(obj2), width(obj2) # Get the height and width of object 2
  h5 = height(obj5) # Get the height of object 5
  shift_amount = (uppermost(obj2) - h5, rightmost(obj2) - rightmost(obj5)) # Calculate the shift amount to align to the top right
  shifted_obj5 = shift(obj5, shift_amount) # Shift the object 5
  O = paint(cover(I, obj5), shifted_obj5)  # Paint the shifted object onto the image
  return O
 
13.666666666666666, 8.937756, def idcghicafaagecefagbdacfbbbajdbjg(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  target_pos = (uppermost(obj2) - height(obj5), rightmost(obj2))  
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.0, 9.430238, def iebddafaeacceaddbaadfgecdeehbcee(I):
  objs = objects(I, T, F, T)
  obj2, obj5 = first(colorfilter(objs, 2)), first(colorfilter(objs, 5))
  new_obj5 = shift(obj5, subtract((uppermost(obj2)-height(obj5), rightmost(obj2)), lrcorner(obj5)))
  O = paint(cover(I, obj5), new_obj5)
  return O
 
14.0, 9.959996, def cdahedaaeaeceaaejbbiegcbfdedjjfc(I):
  obj2 = extract(objects(I, T, F, T), lambda obj: color(obj) == 2)
  obj5 = extract(objects(I, T, F, T), lambda obj: color(obj) == 5)
  O = paint(I, shift(recolor(0, obj5), add(subtract(ulcorner(obj2), (height(obj5), 0)), shape(obj5))))
  return O
 
14.0, 12.095054, def ecfdbahadeaeebaiaeedahcdfdacjbjb(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  target_pos = subtract(lrcorner(obj2), (height(obj5) // 2 + 2, 1))
  O = paint(
    cover(I, obj5), 
    shift(normalize(obj5), target_pos)
  )
  return O
 
14.0, 10.888475, def hcifchhfdgfeebaeicbcbgfdbbjhedge(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  vertical_offset = subtract(centerofmass(obj2), centerofmass(obj5))[0]
  horizontal_offset = subtract(rightmost(obj2), rightmost(obj5)) - 1 
  O = paint(
    cover(I, obj5), 
    shift(obj5, (vertical_offset - 2, horizontal_offset)) 
  )
  return O
 
14.0, 10.254651, def efcjcfhccfbjeibaadbhcedidbahdgfh(I):
    obj2 = first(colorfilter(objects(I, T, F, T), 2))
    obj5 = first(colorfilter(objects(I, T, F, T), 5))
    O = paint(
        cover(I, obj5),
        shift(obj5, gravitate(obj5, shift(obj2, (-2, -1))))
    )
    return O 
 
14.0, 11.000538, def jfchdgcabejgeffcjajchdegeeaaibhf(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  shift_vector = (-2, subtract(rightmost(obj2), rightmost(obj5)) - 1)
  O = paint(
      cover(I, obj5),
      shift(obj5, shift_vector)
  )
  return O
 
14.0, 8.832804, def ajebdcigeicaecejaffcebbadfafibgc(I):
  O = I
  for i, row in enumerate(I):
    for j, value in enumerate(row):
      if value == FIVE:
        new_i = i - 3 if j <= 6 else i + 7
        new_j = j - 3 if j <= 6 else j - 7
        if 0 <= new_i < len(I) and 0 <= new_j < len(row):
          O = paint(cover(O, {(FIVE, (i, j))}), {(FIVE, (new_i, new_j))})
  return O
 
24.333333333333332, 53.365696, def bidffaadebceecfgjbabbddbjehacaef(I):
  left_half = crop(I, (0, 0), (len(I), len(I[0]) // 2 + len(I[0]) % 2))
  right_half = crop(I, (0, len(I[0]) // 2), (len(I), len(I[0]) // 2 + len(I[0]) % 2))
  left_shifted = shift(recolor(ZERO, ofcolor(left_half, FIVE)), (-3, -3))
  right_shifted = shift(recolor(ZERO, ofcolor(right_half, FIVE)), (7, -7))
  O = paint(paint(canvas(ZERO, shape(I)), left_shifted), right_shifted)
  return O
 
42.0, 15.771897, def fggfjbagebeeeagfjdcdceiffaaecaea(I):
  five_objs = objects(I, True, False, False)
  left_objs = sfilter(five_objs, lambda obj: leftmost(obj) <= 6)
  right_objs = sfilter(five_objs, lambda obj: leftmost(obj) > 6)
  O = I
  for obj in left_objs:
    O = paint(cover(O, obj), shift(obj, (-3,-3)))
  for obj in right_objs:
    O = paint(cover(O, obj), shift(obj, (7,-7)))
  return O
 
14.0, 6.9671226, def edacadabddjcebefbjdafdacaabebdcd(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_5 = halve(height(obj_5))
  target_pos = subtract(lrcorner(obj_2), (0, h_5))
  shift_vector = subtract(target_pos, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O 
 
7.0, 17.047764, def ebccdjcbffdheeediaeeabdcfffhgajh(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_5 = center(obj_5)
  target_pos = subtract(llcorner(obj_2), (0, center_5[1]))
  new_obj_5 = shift(obj_5, subtract(target_pos, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.7234797, def aaefbhbhfjcfeeddigejdedfhdfbfgge(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, subtract((lrcorner(obj_2)[0], center(obj_5)[1]), ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 7.150895, def dhfbdcbffijceigebcagbahbgbeadfgf(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  h2 = height(obj2) 
  target_pos = add(ulcorner(obj2), (h2, -leftmost(obj5))) 
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.333333333333334, 10.186991, def bfabefbadcedeeffiedbbcdfiibehbed(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  h5, w5 = shape(obj5)
  left_shift = subtract(ulcorner(obj2), (0, w5 + 1))
  right_shift = add((lowermost(obj2), width(obj2) + 1), (0, -leftmost(obj5) - w5))
  shifted_left = shift(obj5, subtract(left_shift, ulcorner(obj5)))
  shifted_right = shift(obj5, subtract(right_shift, ulcorner(obj5)))
  O = paint(paint(cover(I, obj5), shifted_left), shifted_right)
  return O
 
14.0, 10.616123, def aajaffedheageiadjjbbaidaaacbcfbc(I):
    obj2 = first(colorfilter(objects(I, T, F, T), 2))
    obj5 = first(colorfilter(objects(I, T, F, T), 5))
    h5 = height(obj5)
    target_left = (ulcorner(obj2)[0], ulcorner(obj2)[1]-width(obj5)-1)
    target_right = (ulcorner(obj2)[0], lrcorner(obj2)[1]+2)
    shift_left = subtract(target_left,  ulcorner(obj5))
    shift_right = subtract(target_right,  ulcorner(obj5))
    shifted_left = shift(obj5, shift_left)
    shifted_right = shift(obj5, shift_right)
    O = paint(paint(cover(I, obj5), shifted_left), shifted_right)
    return O 
 
14.0, 9.346956, def cafgbdcghifdegffaajabjefahgabgfe(I):
    objs = objects(I, T, F, T)
    obj2 = first(colorfilter(objs, 2))
    obj5 = first(colorfilter(objs, 5))
    center2 = center(obj2)
    shift_amount = subtract(center2, center(obj5))
    O = paint(cover(I, obj5), shift(obj5, shift_amount))
    return O 
 
11.333333333333334, 9.414028, def cdeifcecgbabeedhaddgcbiccjbciihb(I):
    obj2 = first(colorfilter(objects(I, T, F, T), 2))
    obj5 = first(colorfilter(objects(I, T, F, T), 5))
    h2, w2 = shape(obj2)
    h5, w5 = shape(obj5)
    shift_amount = (h2 // 2 - h5 // 2 + h2 % 2,  w2 // 2 - w5 // 2 + w2 % 2)
    O = paint(cover(I, obj5), shift(obj5, add(ulcorner(obj2), shift_amount)))
    return O
 
13.0, 9.542943, def giddejdeciaaefbdacdfcijjfbahgaei(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  shift_vector = (uppermost(two_obj) - uppermost(five_obj), 0) if uppermost(five_obj) != uppermost(two_obj) else (0, leftmost(two_obj) - leftmost(five_obj))
  O = underpaint(fill(I, ZERO, five_obj), shift(five_obj, shift_vector))
  return O 
 
13.333333333333334, 8.217223, def diceijejbfgbeddhbajadfjcadcdfbeb(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  ref_left = leftmost(obj2)
  shift_amount = (4, 5) if leftmost(obj5) < ref_left else (4, 0)
  O = paint(
    cover(I, obj5), 
    shift(obj5, shift_amount)
  )
  return O
 
13.333333333333334, 10.056977, def cjcbgdjdafeheddajaccffcceaeddibg(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  new_obj5 = shift(obj5, (4,  5 * (position(obj5, obj2)[1] == -1)))
  O = paint(cover(I, obj5), new_obj5)
  return O
 
12.666666666666666, 9.442912, def idcccefbacafedhajcbfehffdeeaadbj(I):
  five_objs = objects(I, True, False, False)
  O = I
  for obj in five_objs:
    if color(obj) == FIVE:
      if rightmost(obj) <= 6:
        O = paint(cover(O, obj), shift(obj, (-3, -3)))
      else:
        O = paint(cover(O, obj), shift(obj, (7, -7)))
  return O
 
12.666666666666666, 5.554834, def gecijffedcffecdjjadbcbcabcgabfab(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - center(obj_5)[0], leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.3740325, def abcdcddjicebeddaaihjacecjieffaah(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = add((lowermost(obj_2), 0), subtract(leftmost(obj_2), (rightmost(obj_5) + 1, 0)))
  new_obj_5 = shift(obj_5, subtract(target_location, center(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 8.1846075, def bcdfbbghacaaefbejidecabejgadebjf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  bottom_row_2 = frozenset((i, j) for i, j in asindices(I) if i == lowermost(obj_2))
  target_cell = min(bottom_row_2, key=lambda x: x[1])
  new_obj_5 = shift(obj_5, subtract((target_cell[0], target_cell[1] - 1), ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.236749, def ebbaafdciiececjijbbhacgdjbihidfa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  shift_amount = subtract((lowermost(obj_2) - (height(obj_5) // 2), leftmost(obj_2) - 1), ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_amount) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.073723, def efcdiidbhafjefdcadgdfabaidiiahca(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  h2 = height(obj2)
  target_j = rightmost(obj2) + (1 if leftmost(obj5) > rightmost(obj2) else 0)
  target_pos = (lowermost(obj2) + 1, target_j)
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 7.9616284, def abdddabfddadebeeabgbdafecejffaae(I):
  obj2 = toindices(first(colorfilter(objects(I, T, F, T), 2)))
  obj5 = toindices(first(colorfilter(objects(I, T, F, T), 5)))
  shift_amount = (lowermost(obj2) - uppermost(obj5) + 1, 
                  max(0, rightmost(obj2) - leftmost(obj5) + 1))
  moved_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), recolor(5, moved_obj5))
  return O
 
12.666666666666666, 8.465713, def dhegeabffebbejcajbdcddfebfeabicb(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  O = paint(
      cover(I, obj5),
      shift(
          obj5,
          (
              height(obj2) - (uppermost(obj5) - lowermost(obj2)) - 1,
              max(0, rightmost(obj2) - leftmost(obj5) + 1)
          )
      )
  ) 
  return O
 
14.0, 8.597969, def fbedeaebaajfehggaibaeeebieeccjde(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  O = I
  for i in range(height(I)):
    for j in range(width(I)):
      if (i, j) in toindices(obj5):
        new_i = i + height(obj2) - (uppermost(obj5) - lowermost(obj2)) - 1
        new_j = j + max(0, rightmost(obj2) - leftmost(obj5) + 1)
        if 0 <= new_i < height(I) and 0 <= new_j < width(I):
          O = paint(cover(O, {(5, (i, j))}), {(5, (new_i, new_j))})
  return O
 
18.333333333333332, 20.831882, def bibjibfcdccdefhaiacbebfedfbgcajf(I):
  obj2 = toindices(first(colorfilter(objects(I, T, F, T), 2)))
  obj5 = toindices(first(colorfilter(objects(I, T, F, T), 5)))
  O = canvas(0, shape(I)) 
  for i, j in asindices(I):
    if (i, j) in obj2:
      O = paint(O, {(2, (i, j))})
    if (i, j) in obj5:
      new_i = i + lowermost(obj2) - uppermost(obj5) + 1
      new_j = j + max(0, rightmost(obj2) - leftmost(obj5) + 1)
      if 0 <= new_i < height(I) and 0 <= new_j < width(I):
        O = paint(O, {(5, (new_i, new_j))})
  return O
 
14.0, 8.998391, def ebbfejebbadcegdjieagbfhdbbdedede(I):
  obj_five = toobject(ofcolor(I, FIVE), I)
  obj_two = toobject(ofcolor(I, TWO), I)
  if hmatching(obj_five, obj_two):
    O = move(I, obj_five, (0, leftmost(obj_two) - leftmost(obj_five)))
  else:
    O = move(I, obj_five, (uppermost(obj_two) - uppermost(obj_five), 0))
  return O
 
11.333333333333334, 8.005549, def efabhfccbaibefhejgabeffeaechhfab(I):
  obj_five = toobject(ofcolor(I, FIVE), I)
  obj_two = toobject(ofcolor(I, TWO), I)
  rel_pos = position(obj_five, obj_two)
  shift_vector = (rel_pos[0] * (rel_pos[0] != 0), rel_pos[1] * (rel_pos[1] != 0))
  O = move(I, obj_five, multiply(shift_vector, shape(obj_five))) 
  return O
 
14.0, 10.752647, def fecdbaefebaeefcdigadaidhbcffcdac(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  
  # Determine shift direction based on '5' object's position relative to '2'
  shift_direction = (-1, -1) if leftmost(obj5) < leftmost(obj2) else (-1, 1)
  
  # Shift '5' object upwards and outwards
  O = paint(
    cover(I, obj5),
    shift(obj5, (uppermost(obj2) - uppermost(obj5) - 1, shift_direction[1] * (width(obj2) // 2 + 1)))
  )
  return O
 
13.0, 8.818101, def cggcbiifafeaegdcibcchdjeijfeafcd(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  
  # Calculate center points of both objects
  center2 = centerofmass(obj2)
  center5 = centerofmass(obj5)
  
  # Calculate relative position and adjust for desired offset
  rel_pos = subtract(center5, center2)
  shift_amount = (
    - rel_pos[0] - 1, 
    (abs(rel_pos[1]) + width(obj2) // 2 + 1) * sign(rel_pos[1]) 
  )

  O = paint(
    cover(I, obj5), 
    shift(obj5, shift_amount)
  )
  return O
 
11.0, 9.213718, def gfffhiedgcbbehgbjgefaieeaacfifcb(I):
  five_indices = ofcolor(I, FIVE)
  moved_indices = frozenset(
    (i - 3 if j <= 6 else i - 7, j) for i, j in five_indices
  )
  O = fill(fill(I, ZERO, five_indices), FIVE, moved_indices)
  return O
 
13.333333333333334, 8.781796, def deafcfjjdbeieaebbbfdeecfdcdbecee(I):
  O = I
  for i, row in enumerate(I):
    for j, value in enumerate(row):
      if value == FIVE:
        new_i = i - 3 if j <= 6 else i - 7
        if 0 <= new_i < len(I):
          O = paint(cover(O, {(FIVE, (i, j))}), {(FIVE, (new_i, j))})
  return O
 
14.0, 9.959996, def aegieehefhdjecfdbiehfddbffhadafc(I):
  def move_row(row, row_index):
    new_row = list(row)
    for j, value in enumerate(row):
      if value == FIVE:
        new_i = row_index - 3 if j <= 6 else row_index - 7
        if 0 <= new_i < len(I):
          new_row[j] = ZERO
          if 0 <= new_i < len(I):
            new_row[j] = FIVE
    return tuple(new_row)

  O = tuple(move_row(row, i) for i, row in enumerate(I))
  return O
 
12.666666666666666, 5.768037, def beiaibhdgddjechdjaadaadgbfjjiacf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) - height(obj_5) + 1, rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 5.772035, def dahfeffiacebebabjcedcbcccbcacidf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - center(obj_5)[0] - height(obj_5) // 2, rightmost(obj_2) - center(obj_5)[1] + width(obj_5) // 2 + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.279154, def dhdceadbabdeeggcadaibbeidfbejfde(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  # Align vertically first
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) - height(obj_5) + 1, 0))
  # Use gravitate to move right of obj_2
  h_shift = gravitate(new_obj_5, shift(obj_2, (0, 1)))[1] 
  new_obj_5 = shift(new_obj_5, (0, h_shift)) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 5.0360947, def cdgebaddaifheagciadffbcccahjdedg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  mirrored_obj_5 = hmirror(obj_5)
  new_obj_5 = shift(mirrored_obj_5, (lowermost(obj_2) - uppermost(mirrored_obj_5) - height(mirrored_obj_5) + 1, rightmost(obj_2) - leftmost(mirrored_obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.751154, def bcaafcjeagaceabdjhebjbggfaafaeje(I):
  objs = objects(I, T, F, T)
  obj2 = extract(objs, lambda obj: color(obj) == 2)
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  bottom_left = (uppermost(obj2) + height(obj2) - 1, leftmost(obj2))
  new_obj5 = shift(obj5, subtract(bottom_left, ulcorner(obj5)))
  O = paint(cover(I, obj5), new_obj5)
  return O
 
13.333333333333334, 9.481424, def cffbcadbfjfhedfbbcdhcdibibcjfbbh(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  O = paint(
        cover(I, obj5), 
        shift(obj5, (height(obj2), leftmost(obj2) - leftmost(obj5)))
      )
  return O
 
12.0, 9.699053, def bejadcbhddedeccaaceaddeadifdbebd(I):
  obj2 = argmax(objects(I, T, F, T), lambda obj: color(obj) == 2)
  obj5 = argmax(objects(I, T, F, T), lambda obj: color(obj) == 5)
  shift_amount = (lowermost(obj2), leftmost(obj2) - leftmost(obj5))
  O = paint(cover(I, obj5), shift(obj5, shift_amount))
  return O
 
13.666666666666666, 9.604692, def bifidedacjdbebadaddbbchhebjgbhhf(I):
    obj2 = next(filter(lambda o: color(o) == 2, objects(I, T, F, T)))
    obj5 = next(filter(lambda o: color(o) == 5, objects(I, T, F, T)))
    O = paint(
      fill(I, 0, toindices(obj5)),
      shift(obj5, add(
          (height(obj2), 0),
          subtract(toivec(leftmost(obj2)), toivec(leftmost(obj5)))
      ))
    )
    return O
 
14.0, 9.428555, def ccaeicbddfeeeejeafhfddfdaaaafeii(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  shift_vector = (
      (leftmost(two_obj) - leftmost(five_obj)) * (uppermost(five_obj) == uppermost(two_obj)),
      (uppermost(two_obj) - uppermost(five_obj)) * (uppermost(five_obj) != uppermost(two_obj))
  )
  O = move(I, five_obj, shift_vector)
  return O
 
13.666666666666666, 10.402694, def aeefeibbbaabeabeahbfegbccafbdgia(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  ref_upper = uppermost(obj2) 
  ref_left = leftmost(obj2)
  shift_amount = (-2, -1) if leftmost(obj5) > ref_left else (-2, width(obj2)-1)  
  O = paint(
    cover(I, obj5), 
    shift(obj5, shift_amount)
  )
  return O
 
14.0, 10.422835, def adabbgdafadcehjdijjjceabccbgedeb(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  ref_loc = center(obj2)
  shift_amount = (-2, -1) if center(obj5)[1] > ref_loc[1] else (-2, width(obj2) - 1) 
  O = paint(
    cover(I, obj5), 
    shift(obj5, shift_amount)
  )
  return O
 
14.0, 10.435296, def edgabeacabejedebahdjadecedajhfhe(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  direction = position(obj5, obj2)
  shift_amount = (-2, -1) if direction == (0, 1) else (-2, width(obj2) - 1)
  O = paint(
    cover(I, obj5), 
    shift(obj5, shift_amount)
  )
  return O
 
14.0, 9.454247, def afbaeedbddefebccjgdbaijdffbidgde(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  shift_amount = (-2, leftmost(obj2) - leftmost(obj5) - 1) if leftmost(obj5) > leftmost(obj2) else (-2, rightmost(obj2) - leftmost(obj5))
  O = paint(
    cover(I, obj5), 
    shift(obj5, shift_amount)
  )
  return O
 
10.0, 5.72791, def ccdfahjfjaahecfaajadaejecgfbcehc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (- (center(obj_5)[0] - center(obj_2)[0]),  leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.284595, def igfifcbegcfheabjjedhhiicgbebdffb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - center(obj_5)[0],  -width(obj_5) - 1 + leftmost(obj_2)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
8.666666666666666, 7.2261515, def baffaeedccijedecbegccjhbhebaefhb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (center(obj_2)[0], leftmost(obj_2) - width(obj_5)) 
  shift_amount = subtract(target_location, center(obj_5))
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.001121, def dcicdfacdiaeegbiajaabechedaehega(I):
    obj2 = first(colorfilter(objects(I, T, F, T), 2))
    obj5 = first(colorfilter(objects(I, T, F, T), 5))
    h_shift = width(obj2) - width(obj5) + 1 
    v_shift =  lowermost(obj2) - uppermost(obj5) + 1
    O = paint(cover(I, obj5), shift(obj5, (v_shift, h_shift)))
    return O
 
15.0, 9.602781, def ebghggecbejfedejaefhicfaghadigfj(I):
    two_corners = (ulcorner(toindices(first(colorfilter(objects(I, T, F, T), 2)))), 
                 lrcorner(toindices(first(colorfilter(objects(I, T, F, T), 2)))))
    five_corner = ulcorner(toindices(first(colorfilter(objects(I, T, F, T), 5))))
    shift_amount = subtract((two_corners[1][0] + 1, two_corners[1][1] - five_corner[1]), (0, 0))
    O = paint(I, shift(first(colorfilter(objects(I, T, F, T), 5)), shift_amount))
    return O
 
14.0, 8.507997, def icffffedbbeceffibficbecgdfafcfgf(I):
  fives = toobject(ofcolor(I, FIVE), I)
  twos = toobject(ofcolor(I, TWO), I)
  O = move(I, fives, (uppermost(twos) - uppermost(fives) if not hmatching(fives, twos) else 0, leftmost(twos) - leftmost(fives)))
  return O
 
14.0, 8.814989, def bdjfhiiafdhdeaabadejjegdidecfaei(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  target_loc = (uppermost(two_obj) if leftmost(five_obj) != leftmost(two_obj) else uppermost(five_obj), leftmost(two_obj))
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, subtract(target_loc, ulcorner(five_obj)))) 
  return O
 
13.666666666666666, 8.889842, def djdfccdaccafecahbfieaaeadgeacifc(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  O = paint(
    cover(I, obj5),
    shift(
      obj5, 
      (uppermost(obj2) - lowermost(obj5) - 1, leftmost(obj2) - leftmost(obj5))
    )
  )
  return O
 
16.333333333333332, 10.030182, def fdgfdfcccbbbeefgbcgdbfgfcicceice(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  O = paint(
    I, 
    shift(
      recolor(5, toindices(obj5)), 
      (uppermost(obj2) - lowermost(obj5) - 1, leftmost(obj2) - leftmost(obj5))
    )
  )
  return O
 
8.333333333333334, 15.45088, def gccehicaccejecafbbcaddajhdcajjji(I):
  five_indices = ofcolor(I, FIVE)
  moved_indices = frozenset((i - (3 if j <= 6 else 7), j + 9) for i, j in five_indices)
  O = fill(fill(I, ZERO, five_indices), FIVE, moved_indices)
  return O
 
14.0, 9.353997, def aacdcdacbjdfegeaifejifddefdjedcc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  mirrored_obj_5 = hmirror(obj_5)
  new_obj_5 = shift(mirrored_obj_5, (uppermost(obj_2) - height(mirrored_obj_5), leftmost(obj_2)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.951007, def ifbcjeabbacaefccbdgbffagbifechic(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_pos = (uppermost(obj_2), leftmost(obj_2)) 
  new_obj_5 = shift(hmirror(obj_5), subtract(target_pos, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
8.333333333333334, 13.973575, def cedifjedhcedefbabbcjahdaidcaejfg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = toobject(shift(hmirror(toindices(obj_5)), subtract(ulcorner(obj_2), ulcorner(obj_5))), I)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.409215, def fgdbcjgfgcgjejfdafcbbfaaffgbbabd(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  
  # Calculate offset based on relative vertical position
  v_offset = (height(obj2) // 2) - (height(obj5) // 2)
  
  # Calculate target position for obj5's upper-left corner
  target_pos = add(ulcorner(obj2), (-v_offset, width(obj2))) 

  # Shift obj5 to target position
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  
  # Paint the shifted object onto the image
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.0, 10.653273, def accfddhbbicgeaifjbgdfhbjjhahaaci(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  
  # Determine relative position of obj5 to obj2
  rel_pos = position(obj5, obj2) 
  
  # Calculate target position based on relative position
  target_pos = add(ulcorner(obj2), {
      (1, 1): (height(obj2), 0),     # Below
      (-1, 1): (0, width(obj2)),      # Right
      (1, -1): (height(obj2), -width(obj5)), # Below-Left
      (-1, -1): (0, -width(obj5))     # Left
  }.get(rel_pos, (0, 0)))

  # Shift obj5 to target position
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  
  # Paint the shifted object onto the image
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.0, 9.062127, def fchbdbefeabhegafjfeebfbhaecdbaee(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))

  # Calculate the center of mass for both objects
  center2 = centerofmass(obj2)
  center5 = centerofmass(obj5)

  # Calculate the difference in center of mass coordinates
  diff = subtract(center2, center5)

  # Define possible directions for moving obj5
  directions = {
      (1, 0): (height(obj2), 0),   # Down
      (-1, 0): (0, 0),            # Up 
      (0, 1): (0, width(obj2)),    # Right
      (0, -1): (0, -width(obj5))   # Left
  }

  # Choose the direction closest to the difference in centers
  move_dir = directions[argmin(directions, lambda d: abs(d[0]-diff[0]) + abs(d[1]-diff[1]))]

  # Calculate target position
  target_pos = add(ulcorner(obj2), move_dir)

  # Shift obj5 to target position
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  
  # Paint the shifted object onto the image
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.0, 10.229445, def cacaachdacijeheiibfgfjagebjaebdd(I):
  objs = objects(I, T, F, T)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))

  # Directly calculate offsets based on relative position
  offset = (height(obj2) if uppermost(obj5) > lowermost(obj2) else 0, 
            width(obj2) if leftmost(obj5) > rightmost(obj2) else -width(obj5))
  
  # Shift obj5 
  shifted_obj5 = shift(obj5, offset)
  
  # Paint the shifted object onto the image
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
14.0, 9.79098, def cjjchejccfbbefdfjhcbgbaedefefbia(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  target_loc = (
      lowermost(two_obj) if not vmatching(five_obj, two_obj) else uppermost(two_obj), 
      leftmost(two_obj) if not vmatching(five_obj, two_obj) else rightmost(five_obj) + 1
  )
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, subtract(target_loc, ulcorner(five_obj))))
  return O
 
14.0, 9.096005, def dgeadjcgaeabefbbjhcdbbehdcbafade(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  v_shift = uppermost(two_obj) - uppermost(five_obj)
  h_shift = leftmost(two_obj) - leftmost(five_obj)
  shift_amount = (v_shift, h_shift + width(five_obj) + 1) if v_shift != 0 else (v_shift + height(five_obj) + 1, h_shift)
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, shift_amount))
  return O
 
14.0, 10.007769, def bfccdedeafefejfbaeacbdccaebabbfd(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  shift_amount = gravitate(
      shift(five_obj, (height(five_obj), 0)), 
      two_obj
  )
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, shift_amount))
  return O
 
14.0, 9.600395, def dfbfdidiegbiedcdihiaabcbhaddidef(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  h = max(0, uppermost(obj2) - 2) 
  w = min(len(I[0]) - width(obj5), leftmost(obj2) if leftmost(obj5) < leftmost(obj2) else rightmost(obj2) - width(obj5)) 
  O = paint(
    cover(I, obj5), 
    shift(obj5, (h - uppermost(obj5), w - leftmost(obj5)))
  )
  return O 
 
14.0, 11.003685, def ahfgeabfaebfeafeibbedjcgjfdebdch(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  v_shift = max(-uppermost(obj5), -2) 
  h_shift = leftmost(obj2) - leftmost(obj5) if leftmost(obj5) < leftmost(obj2) else rightmost(obj2) - rightmost(obj5)
  O = paint(
    cover(I, obj5), 
    shift(obj5, (v_shift, h_shift))
  )
  return O
 
14.0, 9.607931, def aabccfibddebeiabjbcaebfebfefhbia(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  new_ulcorner = (max(0, uppermost(obj2) - 2), leftmost(obj2) if leftmost(obj5) < leftmost(obj2) else rightmost(obj2) - width(obj5) + 1)
  O = paint(
    cover(I, obj5), 
    shift(obj5, subtract(new_ulcorner, ulcorner(obj5)))
  )
  return O
 
14.0, 10.3412285, def cfaafebhaecieabjbcecbeiaaicigbgb(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  v_shift = (0, -2) if uppermost(obj2) > 1 else (uppermost(obj2) - 1, -uppermost(obj5))
  h_shift = (0, leftmost(obj2) - leftmost(obj5)) if leftmost(obj5) < leftmost(obj2) else (0, rightmost(obj2) - rightmost(obj5))
  O = paint(
    cover(I, obj5), 
    shift(obj5, add(v_shift, h_shift))
  )
  return O
 
11.0, 11.341774, def fchbfcfbcgbjeecfjieccfffddadedec(I):
  fives =  {(FIVE, (i, j)) for i, row in enumerate(I) for j, value in enumerate(row) if value == FIVE}
  moved_fives = {(v, (i + 3, j + (3 if j <= 6 else 7))) for v, (i, j) in fives}
  O = paint(cover(I, fives), moved_fives)
  return O
 
13.666666666666666, 9.577291, def iebcdbafebfeeaaejbbieifdedbefecd(I):
  O = I
  for j in range(len(I[0])):
    for i in range(len(I)):
      if I[i][j] == FIVE:
        new_i = i + 3
        new_j = j + (3 if j <= 6 else 7)
        if 0 <= new_i < len(I) and 0 <= new_j < len(I[0]):
          O = paint(cover(O, {(FIVE, (i, j))}), {(FIVE, (new_i, new_j))})
  return O
 
32.0, 30.770477, def fdehfgihjidfehcaigcaeebfcccfbigg(I):
  five_objs = objects(I, True, False, False)
  O = I
  for obj in five_objs:
    shift_amount = (3, 3) if rightmost(obj) <= 6 else (3, 7)
    O = paint(cover(O, obj), shift(obj, shift_amount))
  return O
 
14.0, 9.959996, def jdahgeidddfcefchjaefbfcciegabccb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  rel_pos = position(obj_5, obj_2)  
  new_obj_5 = shift(obj_5, multiply(rel_pos, (-width(obj_5), 0)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.333333333333334, 8.005549, def dbdcedgccabceaaibdccdbddbeadfbjf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = center(obj_2)
  center_5 = center(obj_5)
  new_obj_5 = shift(obj_5, (0, center_2[1]-center_5[1]-width(obj_5))) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 8.060484, def fbebjbdffdbgedfjbeaadfbhfjbhceha(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    new_obj_5 = shift(obj_5, gravitate(obj_5, shift(obj_2, (0, -width(obj_5)-1))))
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
14.0, 8.651748, def hgbjfgjcfcbdeadcjebfbdgfahiidadb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  hdiff = subtract(center(obj_2), center(obj_5))[1]
  new_obj_5 = shift(obj_5, (0, hdiff - width(obj_5) - (1 if hdiff > 0 else -1)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.897905, def ecghhjfgcbeiedceigebdfgfheadjbaa(I):
  objs = objects(I, T, F, T)  # Find all objects
  obj2 = first(colorfilter(objs, 2))  # Get the object with color 2
  obj5 = first(colorfilter(objs, 5))  # Get the object with color 5
  center_j = (leftmost(obj2) + rightmost(obj2)) // 2 # Find the center column of the '2' object
  target = (uppermost(obj2), center_j - width(obj5) // 2) # Calculate target position for the '5' object
  O = paint(cover(I, obj5), shift(obj5, subtract(target, ulcorner(obj5)))) # Move the '5' object
  return O
 
13.333333333333334, 8.824683, def bgabhcdfbjdcegdaabfjcbejjeahgiii(I):
  obj2 = argmax(objects(I, T, F, T), lambda obj: color(obj) == 2) # Find '2' object
  obj5 = argmax(objects(I, T, F, T), lambda obj: color(obj) == 5) # Find '5' object
  h2 = height(obj2) // 2  # Calculate half the height of the '2' object
  offset = (uppermost(obj2) - uppermost(obj5) - h2, (leftmost(obj2) + rightmost(obj2)) // 2 - leftmost(obj5)) # Calculate offset for '5' object
  O = paint(cover(I, obj5), shift(obj5, offset))  # Move the '5' object
  return O 
 
14.0, 9.641738, def ajcabfccdibaedecjbbdhbhibaahjiic(I):
  obj2 = extract(objects(I, T, F, T), lambda obj: color(obj) == 2) # Extract '2' object
  obj5 = extract(objects(I, T, F, T), lambda obj: color(obj) == 5) # Extract '5' object
  target_i = uppermost(obj2) + (height(obj2) - height(obj5)) // 2 # Calculate target row
  target_j = (leftmost(obj2) + rightmost(obj2) - width(obj5)) // 2 # Calculate target column
  O = paint(cover(I, obj5), shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))) # Move '5' object 
  return O
 
7.0, 17.047764, def chahcccecbicejeebceabafgfdbfagjb(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  shift_amount = (height(two_obj) + 1, 0) if vmatching(five_obj, two_obj) else (0, width(two_obj) + 1)
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, add(ulcorner(two_obj), shift_amount)))
  return O
 
9.0, 12.34629, def bjbafjijjdbgehdeiahcbgcbcajhdead(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  v_aligned = vmatching(five_obj, two_obj)
  target_corner = lrcorner(two_obj) if v_aligned else ulcorner(two_obj)
  shift_amount = (height(five_obj), 0) if v_aligned else (0, width(five_obj))
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, add(target_corner, shift_amount)))
  return O
 
13.666666666666666, 9.596264, def aabjadbafbfjedbjihcbcdfcgeafadfa(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  hdiff = height(obj2) - height(obj5)
  voffset = (hdiff // 2) * (1 if hdiff % 2 == 0 else -1)
  O = paint(
    cover(I, obj5),
    shift(obj5, (voffset, width(obj2) + 1))
  )
  return O
 
14.0, 9.731348, def ecdcheefbchdeechifcaadcaffcjfifb(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  shift_amount = (
    centerofmass(obj2)[0] - centerofmass(obj5)[0],
    rightmost(obj2) - leftmost(obj5) + 1
  )
  O = paint(
    cover(I, obj5),
    shift(obj5, shift_amount)
  )
  return O
 
14.0, 7.0745797, def dfeaecfedcaiefcdbjeefdjfaebibfje(I):
  objs = objects(I, T, F, T)
  obj2 = extract(objs, lambda obj: color(obj) == 2)
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  O = paint(
    cover(I, obj5),
    shift(
      obj5,
      (
        (uppermost(obj2) + height(obj2) // 2) - (uppermost(obj5) + height(obj5) // 2),
        rightmost(obj2) - leftmost(obj5) + 1
      )
    )
  )
  return O
 
13.333333333333334, 7.76801, def heiidefecfbeeccfagcdgcjchdbegiab(I):
  five_indices = ofcolor(I, FIVE)
  left_indices = frozenset((i, j) for i, j in five_indices if j <= 6)
  right_indices = five_indices - left_indices
  moved_left = shift(left_indices, (4, 0)) 
  moved_right = shift(hmirror(right_indices), (4, 0))
  O = fill(fill(I, ZERO, five_indices), FIVE, moved_left | moved_right)
  return O
 
31.0, 32.461468, def dgcciaechadcecjhijiaefchbeeadgeb(I):
  O = canvas(ZERO, shape(I))
  for i in range(len(I)):
    for j in range(len(I[0])):
      if I[i][j] == FIVE:
        new_i = i + 4
        new_j = j if j <= 6 else len(I[0]) - j + 6
        if 0 <= new_i < len(I) and 0 <= new_j < len(I[0]):
          O = paint(O, {(FIVE, (new_i, new_j))})
  return O
 
62.666666666666664, 29.80473, def aeibgcdhdjfjegeiadhcdfhfdaecacac(I):
  downscaled = downscale(I, 2)
  transformed = []
  for row_index, row in enumerate(downscaled):
    new_row = [0] * len(row)
    for col_index, value in enumerate(row):
      if value == 5:
        new_col_index = col_index if col_index <= 3 else len(row) - col_index + 3
        if 0 <= new_col_index < len(row):
          new_row[new_col_index] = 5
    transformed.append(new_row)
  return upscale(tuple(tuple(row) for row in transformed), 2)
 
12.666666666666666, 7.2948933, def becieddjccebedbjjaeaijdhffgfhhah(I):
  obj_2 = toobject(ofcolor(I, 2), I)  # Identify the '2' object.
  obj_5 = toobject(ofcolor(I, 5), I)  # Identify the '5' object.
  target_pos = (uppermost(obj_2) - 2, leftmost(obj_2) - 1 + (width(obj_2) - width(obj_5)) // 2) # Calculate target position.
  new_obj_5 = shift(obj_5, subtract(target_pos, ulcorner(obj_5))) # Move '5' object to target position.
  O = paint(cover(I, obj_5), new_obj_5)  # Paint the moved object onto a clean canvas.
  return O
 
14.0, 9.646656, def aajgjbfffegdeeigjadidihcbfecbdce(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  row_offset = -2 
  col_offset = (leftmost(obj_2) + width(obj_2) // 2) - (leftmost(obj_5) + width(obj_5) // 2)
  new_obj_5 = shift(obj_5, (row_offset, col_offset)) 
  O = paint(cover(I, obj_5), new_obj_5)  
  return O
 
10.333333333333334, 13.72438, def cgfjhjbbjaifedidjaadjafffagfjaha(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = normalize(obj_5)
  new_obj_5 = shift(new_obj_5, (uppermost(obj_2) - uppermost(new_obj_5) - height(obj_5) - 1, leftmost(obj_2) - leftmost(new_obj_5) + (width(obj_2) - width(new_obj_5)) // 2))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 9.5446825, def gagbgafdfjhhebbdbjjiffcegabebchf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_center = (uppermost(obj_2) - 2 - height(obj_5) // 2, leftmost(obj_2) + (width(obj_2) - width(obj_5)) // 2)
  offset = subtract(target_center, centerofmass(obj_5))
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.333333333333334, 13.078882, def cbcffbgebbadedafjfehfahhbabcbabf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_ulcorner = (uppermost(obj_2) - 2 - height(obj_5) + 1, leftmost(obj_2) - 1 + (width(obj_2) - width(obj_5)) // 2)
  offset = subtract(target_ulcorner, ulcorner(obj_5)) 
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.405169, def jfgbedgdiidcehedbgchcddcfjcacdhi(I):
  objs = objects(I, T, F, T)  # Identify objects
  obj2 = first(colorfilter(objs, 2))  # Get '2' object
  obj5 = first(colorfilter(objs, 5))  # Get '5' object
  target_pos = (uppermost(obj2), rightmost(obj2) + 1)  # Top right corner of '2'
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))  # Shift '5'
  O = paint(cover(I, obj5), shifted_obj5)  # Update grid
  return O
 
12.0, 5.9439125, def cachjecdibbfegecaifghbhhgjcbicac(I):
  objs = fgpartition(I)  # Partition grid, excluding background
  obj2 = extract(objs, lambda obj: color(obj) == 2)  # Extract '2' object
  obj5 = extract(objs, lambda obj: color(obj) == 5)  # Extract '5' object
  target_i = uppermost(obj2)  # Target row is the top of '2'
  target_j = rightmost(obj2) + 1  # Target column is right of '2'
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))  # Shift '5'
  O = paint(cover(I, obj5), shifted_obj5)  # Update grid
  return O
 
11.333333333333334, 5.7250323, def cjhddieahjbaebfdacidbdfaajcjicbf(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Get '2' object directly
  obj5 = toobject(ofcolor(I, 5), I)  # Get '5' object directly
  h5 = height(obj5)  # Height of '5' object
  target_pos = (uppermost(obj2) + (height(obj2) - h5) // 2, rightmost(obj2) + 1)  # Calculate target 
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))  # Shift '5'
  O = paint(cover(I, obj5), shifted_obj5)  # Update grid
  return O
 
14.0, 9.673455, def faacbfeefafaefdabfeeiedgbbabeiff(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))  # Extract '2' object
  obj5 = first(colorfilter(objects(I, T, F, T), 5))  # Extract '5' object
  center_2 = centerofmass(obj2) # Find center of mass for '2' 
  target_pos = add(center_2, (-(height(obj5) // 2), width(obj2) // 2 + 1)) # Calculate target position 
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))  # Shift '5' object
  O = paint(cover(I, obj5), shifted_obj5)  # Update grid
  return O
 
14.0, 8.644884, def fceffhheadjiehjfbjbbffdaajgedacf(I):
  objs = objects(I, T, F, T)  # Identify objects
  obj2 = first(colorfilter(objs, 2))  # Get '2' object
  obj5 = first(colorfilter(objs, 5))  # Get '5' object
  target_pos = add(lrcorner(obj2), (1,-width(obj5))) # Calculate target position 
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))  # Shift '5' object
  O = paint(cover(I, obj5), shifted_obj5)  # Update grid
  return O
 
9.0, 11.733888, def hdjdabhbcfggebcdieegdccaehcifaid(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  h_shift = width(two_obj) + 1 if not vmatching(five_obj, two_obj) else 1
  v_shift = -height(five_obj) - 1 if h_shift == 1 else 1
  shift_amount = (v_shift, h_shift) if manhattan(shift(five_obj, (v_shift, 0)), two_obj) < manhattan(shift(five_obj, (0, h_shift)), two_obj) else (0, h_shift)
  O = move(I, five_obj, shift_amount)
  return O
 
13.666666666666666, 6.941144, def behcabeieefiecbgaaccceebefbaejcb(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  five_center = centerofmass(five_obj)
  two_center = centerofmass(two_obj)
  h_diff = five_center[1] - two_center[1]
  v_diff = five_center[0] - two_center[0]
  h_shift = (0, sign(h_diff) * (abs(h_diff) - width(two_obj) // 2 - width(five_obj) // 2 - 1))
  v_shift = (sign(v_diff) * (abs(v_diff) - height(two_obj) // 2 - height(five_obj) // 2 - 1), 0)
  shift_amount = h_shift if abs(h_diff) > abs(v_diff) else v_shift
  O = move(I, five_obj, shift_amount)
  return O
 
13.333333333333334, 9.446174, def efedcecfdifhefbbadeggghfadabgdge(I):
    h, w = shape(I)
    five_indices = ofcolor(I, FIVE)
    O = fill(I, ZERO, five_indices)
    for i, j in five_indices:
        new_i = i - 4 
        new_j = j if j <= 6 else w - j + 6 
        if 0 <= new_i < h and 0 <= new_j < w:
          O = fill(O, FIVE, {(new_i, new_j)})
    return O
 
30.666666666666668, 32.143715, def cahagffjabjcebidbcfhdfegjghjdddf(I):
    h, w = shape(I)
    O = canvas(ZERO, (h, w))
    for i, row in enumerate(I):
      for j, val in enumerate(row):
        if val == FIVE:
          new_i = i - 4
          new_j = j if j <= 6 else w - j + 6
          if 0 <= new_i < h and 0 <= new_j < w:
            O = fill(O, FIVE, {(new_i, new_j)})
    return O
 
11.333333333333334, 5.8302803, def bcheddecebfdedgdbbiaefbhceaeaddj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - height(obj_5), rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.0, 7.2927384, def ccccecbabgaeeadbabeeaagffcbejecj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = center(obj_2)
  new_obj_5 = shift(obj_5, (center_2[0] - height(obj_5) // 2 - uppermost(obj_5), center_2[1] + width(obj_2) // 2 - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.188189, def habjiaihfdgjeeeaacfcebdaedefahfh(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_position = (uppermost(obj_2) - 1, rightmost(obj_2) + 1) 
  shift_amount = subtract(target_position, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
21.0, 10.676089, def hgeebbdjbaddeeefiibdahdiceafidcj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_shift =  width(obj_2) - width(obj_5) + 1
  v_shift = - height(obj_5) - 1
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(I, new_obj_5)
  return O
 
14.0, 9.994668, def acdggdccbjbceffaiagdaiaafjacagij(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, gravitate(obj_5, shift(obj_2, (1, 1))))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.639075, def fhdidjbadbaaecebafdacbhcddgdggdb(I):
  obj2 = toobject(ofcolor(I, 2), I) 
  obj5 = toobject(ofcolor(I, 5), I)
  target_pos = (uppermost(obj2) - height(obj5), leftmost(obj2))
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
13.666666666666666, 8.889842, def fchabjjjeeefeiacifhfeiafcjccdhda(I):
  obj2 = first(colorfilter(objects(I, T, F, T), 2))
  obj5 = first(colorfilter(objects(I, T, F, T), 5))
  h5 = height(obj5)
  target_pos = (uppermost(obj2) - h5, leftmost(obj2))
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(I, shifted_obj5)
  return cover(O, obj5)
 
14.0, 8.720109, def acadeecbigeaefbcbgdffbgfbadacajf(I):
  objs = objects(I, T, F, T)
  obj2 = extract(objs, lambda obj: color(obj) == 2)
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  new_obj5 = shift(obj5, (uppermost(obj2) - height(obj5) - uppermost(obj5), leftmost(obj2) - leftmost(obj5))) 
  O = paint(cover(I, obj5), new_obj5)
  return O
 
13.666666666666666, 9.616131, def ibcabdcdcfieehceijidhibgjadbffed(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  target_ulcorner = (uppermost(two_obj) + height(two_obj), rightmost(two_obj) + 1)
  shift_amount = subtract(target_ulcorner, ulcorner(five_obj))
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, shift_amount))
  return O
 
9.0, 15.550077, def bfebcfiafidheafdideaeibcgbdgaffa(I):
  five_obj = toobject(ofcolor(I, FIVE), I)
  two_obj = toobject(ofcolor(I, TWO), I)
  h_shift = width(two_obj) + 1 
  v_shift = lowermost(two_obj) - uppermost(five_obj) + 1
  O = paint(fill(I, mostcolor(I), five_obj), shift(five_obj, (v_shift, h_shift)))
  return O
 
14.0, 9.405169, def jegdgcheffgfecjdaddddcaifiaaabid(I):
  obj2 = toindices(first(colorfilter(objects(I, T, F, T), 2)))
  obj5 = toindices(first(colorfilter(objects(I, T, F, T), 5)))
  O = paint(
    cover(I, obj5),
    shift(
      recolor(5, obj5),
      (
        uppermost(obj2) - uppermost(obj5),
        rightmost(obj2) - leftmost(obj5) + 1
      )
    )
  )
  return O
 
12.666666666666666, 7.294543, def faigaccbeeecegejjfcaafdcegbfgchd(I):
  five_indices = ofcolor(I, FIVE)
  left_indices = frozenset((i, j) for i, j in five_indices if j <= 6)
  right_indices = five_indices - left_indices
  moved_left = shift(left_indices, (-4, 0)) 
  moved_right = shift(hmirror(right_indices), (-4, 0))
  O = fill(fill(I, ZERO, five_indices), FIVE, moved_left | moved_right)
  return O
 
13.0, 8.263944, def hffebafaccjdedfjbebhgcgfdhahecdh(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  mirrored_obj_5 = hmirror(obj_5)
  new_obj_5 = shift(mirrored_obj_5, (lowermost(obj_2) - uppermost(mirrored_obj_5) + 1, rightmost(obj_2) - rightmost(mirrored_obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.0, 7.799744, def fafadefacideejbbadbdadhchacbhicg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = width(obj_2) - width(obj_5)
  new_obj_5 = shift(hmirror(obj_5), (lowermost(obj_2) - uppermost(obj_5) + 1, h_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 5.768037, def ejfdfaeigffeeidfbbgfaidddbjcbjcf(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  h2 = height(obj2)
  h5 = height(obj5)
  target_j = rightmost(obj2) + 1 
  target_i = uppermost(obj2) + (h2 - h5) // 2 if uppermost(obj5) < uppermost(obj2) else uppermost(obj2) + h2 - h5
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
11.333333333333334, 5.6008315, def gigbgefbfbiceadajcjifcfifebjichf(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = (centerofmass(obj2)[0] - centerofmass(obj5)[0], rightmost(obj2) - leftmost(obj5) + 1)
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 9.818796, def faffdgcceeibebcbiicafafiejjfagfi(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = gravitate(obj5, shift(obj2, (0, width(obj2)))) 
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 5.8153176, def aebaddafbicbebchjegceciabbcddfjg(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_pos = add(lrcorner(obj2), (uppermost(obj2) - uppermost(obj5), 1)) 
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5))) 
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 7.1654825, def gbdgjfecgcfgefbcbijbacgcfadbbcha(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5), rightmost(obj_2) - rightmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
7.0, 17.047764, def habdadjggdhaechfjjjicdbjaeajbcba(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, add((lowermost(obj_2), rightmost(obj_2)), subtract((uppermost(obj_5), rightmost(obj_5)), (0, 1))))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 6.7473006, def difcdhabdcbaebaeaaahcahffghgdade(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_corner = add(lrcorner(obj_2), (1, 0)) 
  new_obj_5 = shift(obj_5, subtract(target_corner, urcorner(obj_5))) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.188189, def ddafdibaebbcejgajcbbjeeaeefdidhi(I):
  obj_2 = toobject(ofcolor(I, 2), I)  # Get object made of '2'
  obj_5 = toobject(ofcolor(I, 5), I)  # Get object made of '5'
  new_obj_5 = shift(obj_5, (uppermost(obj_2)-uppermost(obj_5)-1, rightmost(obj_2)-leftmost(obj_5)+1)) # Calculate shift and move object
  O = paint(cover(I, obj_5), new_obj_5)  # Paint the shifted object
  return O
 
9.333333333333334, 16.333544, def haiddhibeidbeeecadabaaiecbbdcffj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = add((lowermost(obj_2) + 2, 0), subtract(center(toindices(obj_2)), (width(obj_5) // 2, 0))) 
  new_obj_5 = shift(obj_5, subtract(target_location, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.333333333333334, 10.44792, def jebfcjfedfeaechbiahfdfdedbhiafca(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  target_location = (lowermost(obj_2) + 2, center_2[1] - width(obj_5) // 2)
  new_obj_5 = shift(obj_5, subtract(target_location, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.959996, def hghgdegadeaieaabbcafjicfcdaaeica(I):
  obj_2 = objects(I, True, False, True)
  obj_5 = objects(I, True, False, False) - obj_2
  obj_2 = first(obj_2)
  obj_5 = first(obj_5)
  target_location = (lowermost(obj_2) + 2, centerofmass(obj_2)[1] - width(obj_5) // 2)
  O = paint(cover(I, obj_5), shift(obj_5, subtract(target_location, ulcorner(obj_5))))
  return O
 
13.0, 10.155759, def edciaeaifgbfeecfiaafcddbeibgifhi(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = (width(obj_2) - width(obj_5)) // 2
  new_obj_5 = shift(obj_5, (lowermost(obj_2) + 2 - uppermost(obj_5), h_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.333333333333334, 10.981837, def bbaafeciifdbecbdahdhbddjajjdhffe(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_row = lowermost(obj_2) + 2
  target_col = leftmost(obj_2) + (width(obj_2) - width(obj_5)) // 2
  shift_amount = (target_row - uppermost(obj_5), target_col - leftmost(obj_5))
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.34242, def aaihaefgefgcecbaaciidjcdggajjfed(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - lowermost(obj_5), leftmost(obj_2) - leftmost(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.301002, def cdbbfagebadjecibbafgjjacdedciecf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  new_obj_5 = shift(obj_5, (center_2[0] - centerofmass(obj_5)[0] - height(obj_5) // 2, center_2[1] - centerofmass(obj_5)[1] - width(obj_5) // 2))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.29388, def bchgeecjfjbjedfgabgidjabdaeaibif(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, gravitate(obj_5, obj_2))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.065753, def dgbjabhfcbfhegfjiecgfcchcabddaee(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = (uppermost(obj2) - centerofmass(obj5)[0], rightmost(obj2) - leftmost(obj5) + 1)
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.0, 5.9439125, def dagjhdbhibghecacaggefbibeecdjfea(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  new_ulcorner = (uppermost(obj2), rightmost(obj2) + 1)
  shifted_obj5 = shift(obj5, subtract(new_ulcorner, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 7.5144596, def ehaiedhifeafedacaicdiefeccdcgcbh(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_location = add(lrcorner(obj2), (uppermost(obj2) - centerofmass(obj5)[0] - height(obj5) // 2, 1))
  shifted_obj5 = shift(obj5, subtract(target_location, centerofmass(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
13.666666666666666, 7.4346676, def acecfecbjcbbegefahddcjifedbcdadb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) + 1, rightmost(obj_2) - rightmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
20.666666666666668, 10.944901, def feeabeajbbjbedbdijbdcidddibhbgda(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_shift = lowermost(obj_2) - uppermost(obj_5) + 1
  h_shift = rightmost(obj_2) - rightmost(obj_5) + 1
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(I, new_obj_5) if not intersection(toindices(new_obj_5), toindices(obj_5)) else paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 10.427214, def ffecddafjfdfeaccaiefcbbeaaejffda(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Extract '2' object
  obj5 = toobject(ofcolor(I, 5), I)  # Extract '5' object
  target_i = uppermost(obj2) - height(obj5)  # Calculate target row
  target_j = rightmost(obj2) + 1  # Calculate target column
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))  # Shift '5' object
  O = paint(cover(I, obj5), shifted_obj5)  # Update the grid
  return O
 
13.666666666666666, 6.3340516, def igajegecdffdedffacaegaaidfbddgai(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Extract '2' object
  obj5 = toobject(ofcolor(I, 5), I)  # Extract '5' object
  new_pos = add(lrcorner(obj2), (1, -height(obj5)))  # Calculate the new upper-left corner of '5' object
  shifted_obj5 = shift(obj5, subtract(new_pos, ulcorner(obj5)))  # Shift the '5' object
  O = paint(cover(I, obj5), shifted_obj5)  # Update the grid
  return O
 
14.0, 10.008705, def fecccjcfcejfeaddbfeeaeejdeabjcci(I):
  objs = fgpartition(I)  # Partition grid, excluding background
  obj2 = extract(objs, matcher(color, 2)) # Extract '2' object
  obj5 = extract(objs, matcher(color, 5)) # Extract '5' object
  target = add(urcorner(obj2), (1, -height(obj5)))  # Target location
  O = paint(cover(I, obj5), shift(obj5, subtract(target, ulcorner(obj5))))  # Move and update
  return O
 
12.666666666666666, 5.768037, def fejdedcbccdceiagjahecfcheeghehha(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = center(obj_2)
  target_position = (center_2[0], rightmost(obj_2) + 1)
  new_obj_5 = shift(obj_5, subtract(target_position, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 5.927905, def efdffecbjbgfedaaaacfdahcbjcbidaa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - uppermost(obj_5),  leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.333333333333334, 8.082264, def dibgiheacafcedjiajejdicdjcfgacea(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_ulcorner = (uppermost(obj_2), leftmost(obj_2) - width(obj_5) - 1) 
  new_obj_5 = shift(obj_5, subtract(target_ulcorner, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
19.0, 13.348604, def bdeaeabfjchbefbiafafdffbbhdfdidb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_shift = uppermost(obj_2) - uppermost(obj_5)
  h_shift = leftmost(obj_2) - rightmost(obj_5) - 1
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(I, new_obj_5) if not intersection(toindices(new_obj_5), toindices(obj_2)) else I
  return O
 
8.666666666666666, 8.533247, def gagiifijabfeebebbagbbgfdcjgiecgc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_center = (center(obj_2)[0], leftmost(obj_2) - width(obj_5) // 2 - 1)
  new_obj_5 = shift(obj_5, subtract(target_center, center(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 9.616131, def bdfjcfbabcedebbhbabfacgbcfeacdbe(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) + 1, rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
20.666666666666668, 9.959657, def jhfcgecadbgfecehacfbfccceabggici(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  down_shift = lowermost(obj_2) - uppermost(obj_5) + 1
  right_shift = rightmost(obj_2) - leftmost(obj_5) + 1
  new_obj_5 = shift(obj_5, (down_shift, right_shift)) 
  O = paint(I, new_obj_5) if obj_5 != new_obj_5 else I
  return O
 
13.0, 6.397925, def hefcigdeeaabebbajejfbjdbcecibeii(I):
  obj2 = toobject(ofcolor(I, 2), I) 
  obj5 = toobject(ofcolor(I, 5), I) 
  new_ulcorner = add(lrcorner(obj2), (1, -height(obj5) + 1)) 
  shifted_obj5 = shift(obj5, subtract(new_ulcorner, ulcorner(obj5))) 
  O = paint(cover(I, obj5), shifted_obj5)  
  return O
 
13.666666666666666, 8.063305, def cehijgdhbdcfegeajbeeacdhgiebfacc(I):
  obj2 = toindices(ofcolor(I, 2))
  obj5 = toobject(ofcolor(I, 5), I)
  target = add(lrcorner(obj2), (1, 0)) 
  shifted_obj5 = shift(obj5, subtract(target, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
13.666666666666666, 6.7473006, def ibeahfhdcafiefagaheecbefbadaebde(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  h = height(obj5)
  new_obj5 = shift(obj5, (lowermost(obj2) - uppermost(obj5) + 1, rightmost(obj2) - leftmost(obj5) + 1 - width(obj5))) 
  O = paint(cover(I, obj5), new_obj5) 
  return O
 
14.0, 7.816242, def eacaigaejdcieaiabcgabfgigfefdjcc(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  v_shift = height(obj2) - height(obj5) + 1
  h_shift = width(obj2) - width(obj5) + 1
  new_obj5 = shift(obj5, (v_shift, h_shift))  
  O = paint(cover(I, obj5), new_obj5) 
  return O
 
14.0, 7.987316, def gdjbgjfcjhceeefcjdigcecccbdgceeb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_right = (lowermost(obj_2), rightmost(obj_2) + 1)
  target_left = (lowermost(obj_2), leftmost(obj_2) - width(obj_5))
  target_position = target_right if target_right[1] < len(I[0]) else target_left
  new_obj_5 = shift(obj_5, subtract(target_position, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
18.333333333333332, 12.851889, def eediegcabcbceaaebeebfiabjeaahefc(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = (
    uppermost(obj2) + (height(obj2) - height(obj5)) // 2 - uppermost(obj5) if height(obj5) < height(obj2) else uppermost(obj2) - uppermost(obj5), 
    rightmost(obj2) + 1 - leftmost(obj5)
  )
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(I, shifted_obj5) if not intersection(toindices(obj5), toindices(shifted_obj5)) else paint(cover(I, obj5), shifted_obj5) 
  return O
 
11.333333333333334, 5.70205, def bdcfgcfadiidegfhbddedfcdffhijabe(I):
  objs = fgpartition(I)
  obj2 = extract(objs, lambda obj: color(obj) == 2)
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  target_i = uppermost(obj2) + halve(height(obj2)) - 1
  target_j = rightmost(obj2) + 1
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
13.666666666666666, 8.550236, def iabadfddcacfeddhagfcdhfbdhgeeiab(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_pos = add(lrcorner(obj2), (1, -centerofmass(obj5)[0] + uppermost(obj2) + halve(height(obj2)) - 1))
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
7.0, 17.047764, def fhbcfbdeeecaeeaajcidbeediiedebda(I):
  objs = fgpartition(I)
  obj2 = extract(objs, lambda obj: color(obj) == 2)
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  h_offset = height(obj2) // 2 - 1  
  v_offset = width(obj2) + 1
  shifted_obj5 = shift(obj5, (uppermost(obj2) + h_offset - uppermost(obj5), rightmost(obj2) + v_offset - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
11.333333333333334, 5.7054906, def fgcdbcbiebifecfeiebgjjcebgfccgae(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj2)
  new_pos = (center_2[0] - height(obj5) // 2, rightmost(obj2) + 1) 
  shifted_obj5 = shift(obj5, subtract(new_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O 
 
21.0, 10.988087, def cgecdejbbifbebfaibbfhaccbdegejha(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_diff = rightmost(obj_2) - leftmost(obj_5) + 1
  v_diff = lowermost(obj_2) - uppermost(obj_5)
  new_obj_5 = shift(obj_5, (v_diff, h_diff))
  O = paint(I, new_obj_5) if not intersection(toindices(new_obj_5), toindices(obj_5)) else paint(cover(I, obj_5), new_obj_5)
  return O
 
7.0, 17.047764, def cacchecjdehbejejajaefddefjiafegc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = toobject(shift(toindices(obj_5), (lowermost(obj_2) - uppermost(obj_5), rightmost(obj_2) - leftmost(obj_5) + 1)), I)
  O = paint(cover(I, obj_5), new_obj_5) 
  return O
 
12.0, 5.32554, def cfdgcefjedbgeigcbccacihadcbfcdad(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_j = leftmost(obj2) - width(obj5)
  target_i = uppermost(obj2) if uppermost(obj5) < uppermost(obj2) else uppermost(obj2) + height(obj2) - height(obj5)
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.666666666666666, 6.6556168, def dijfegeadceheghdihefecfeibjbcdca(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  h_offset = leftmost(obj2) - rightmost(obj5) - 1
  v_offset = (height(obj2)-height(obj5))//2 if uppermost(obj5) < uppermost(obj2) else height(obj2) - height(obj5)
  shifted_obj5 = shift(obj5, (v_offset, h_offset))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 7.9913306, def difejbhghaaeeieiifefcedcfcfibaec(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj2) + max(0, height(obj2)-height(obj5)), leftmost(obj2) - 1)
  shift_vector = subtract(target_location, ulcorner(obj5))
  shifted_obj5 = shift(obj5, shift_vector)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 9.601658, def chfjjcfcejacejdfaacfebbdaeacaedd(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - height(obj_5) - 1, rightmost(obj_2) - rightmost(obj_5) + 1)) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 8.071753, def aaeeehfehfgfecfabgfdceccffiegech(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  offset = (uppermost(obj_2) - uppermost(obj_5) - height(obj_5) , rightmost(obj_2) - rightmost(obj_5) + 1)
  new_obj_5 = shift(obj_5, offset) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.0, 13.473051, def fdaehdbhaeciebdfbdgcibggfegehhda(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, subtract((uppermost(obj_2) - 2, rightmost(obj_2) + 1),  lrcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.0, 15.46252, def difficadgaffeebbjffecbfaiaafbbbi(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  vertical_shift = uppermost(obj2) + height(obj2) // 2 - uppermost(obj5) - 1
  horizontal_shift = width(obj2) + 1 
  O = paint(cover(I, obj5), shift(obj5, (vertical_shift, horizontal_shift)))
  return O
 
10.333333333333334, 7.2408757, def fcdbbabccfhgeagajegcfccdbcbgfdha(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_center_2 = center(obj_2)[1]
  target_right = (uppermost(obj_2), h_center_2 + width(obj_2) // 2 + 1) 
  target_left = (uppermost(obj_2), h_center_2 - width(obj_2) // 2 - width(obj_5))
  target_position = target_right if target_right[1] < len(I[0]) else target_left
  new_obj_5 = shift(obj_5, subtract(target_position, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O 
 
10.333333333333334, 13.213994, def eaahfjadffhhebfejcbbefbcfiacbjei(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_offset = branch(rightmost(obj_2) + width(obj_5) + 1 <= len(I[0]),
                        (0, width(obj_2) // 2 + 1),
                        (0, -width(obj_2) // 2 - width(obj_5)))
  new_obj_5 = shift(obj_5, add(ulcorner(obj_2), target_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 5.9439125, def edfhehfddiffefebjdfcjiehaggfaehb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  right_space = len(I[0]) - rightmost(obj_2) - 1
  left_space = leftmost(obj_2)
  target_pos = branch(right_space >= width(obj_5),
                      (uppermost(obj_2), rightmost(obj_2) + 1),
                      (uppermost(obj_2), leftmost(obj_2) - width(obj_5)))
  new_obj_5 = shift(obj_5, subtract(target_pos, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.673278, def eacdbfgeafebeecjbijeaeacafdhibfb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = branch(rightmost(obj_2) + width(obj_5) <= len(I[0]), 
                   width(obj_2) // 2 + 1, 
                   -width(obj_2) // 2 - width(obj_5))
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - uppermost(obj_5), h_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
7.0, 17.047764, def eecdeieafebbeahbiaffjbhcffeifahc(I):
  obj2 = toindices(ofcolor(I, 2))
  obj5 = toindices(ofcolor(I, 5))
  O = paint(
      fill(I, 0, obj5),
      toobject(shift(obj5, (center(obj2)[0] - center(obj5)[0], rightmost(obj2) - leftmost(obj5) + 1)), I)
  )
  return O
 
14.0, 6.633803, def hhddbdbfafccejjcjfjdbcifeacbbdac(I):
  objs = objects(I, False, False, True) # Extract all objects (excluding background)
  obj_2 = extract(objs, lambda obj: color(obj) == 2) # Find the '2' object
  obj_5 = extract(objs, lambda obj: color(obj) == 5) # Find the '5' object
  new_obj_5 = shift(obj_5, add((1, 1), subtract(lrcorner(obj_2), ulcorner(obj_5)))) # Calculate the new position and shift
  O = paint(cover(I, obj_5), new_obj_5)  # Cover the original '5' and paint the new one
  return O
 
14.0, 7.987316, def aaedhadcejcfedicabafebjbeadjechc(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  new_pos = (lowermost(obj2) , rightmost(obj2) + 1) 
  shifted_obj5 = shift(obj5, subtract(new_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O 
 
14.0, 6.45871, def dffiedbagecbebcebgbidibifbdbbebb(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  h_shift = width(obj2) + 1 - leftmost(obj5)
  v_shift = lowermost(obj2) - uppermost(obj5)
  shifted_obj5 = shift(obj5, (v_shift, h_shift))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 10.445108, def dbfdffeecacceefcbjaiddibdicdcbgf(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shifted_obj5 = shift(obj5, gravitate(obj5, shift(obj2, (height(obj2), 1))))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.666666666666666, 5.768037, def adeffdeebgejeeagjcdcecdbfdcjbace(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_corner = (lowermost(obj2) - height(obj5) + 1, rightmost(obj2) + 1)
  shifted_obj5 =  shift(obj5, subtract(target_corner, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O 
 
11.333333333333334, 5.653906, def ibbdceeafiebegcibcfdfgbifgddbafa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (center(obj_2)[0], rightmost(obj_2) + 1)
  shift_vector = subtract(target_location, llcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.333333333333334, 5.7250323, def fbjadidedcddecdjbdaccgcdediceefe(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_shift = subtract(rightmost(obj_2) + 1, leftmost(obj_5))
  v_shift = subtract(center(obj_2)[0], center(obj_5)[0])
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.0, 15.559542, def cfeffgdbeddbehdbbefhccedcadfbfch(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  h_shift = width(obj2) + 1 
  v_shift = branch(uppermost(obj5) < uppermost(obj2), 0, height(obj2) - height(obj5))
  shifted_obj5 = shift(obj5, (v_shift, h_shift))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 8.924059, def cccbiiahfgfbechaaaheddjjceabccgg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - height(obj_5) - 1, leftmost(obj_2)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.869936, def jfjefjacbbgfejbbadbaifeeafbfbceb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - height(obj_5) - 1, center(obj_2)[1] - center(obj_5)[1]))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 7.1809144, def ahbcieifbfacecfejccbibaggbfifeeb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_loc = (uppermost(obj_2) - height(obj_5), leftmost(obj_2) + 1)
  new_obj_5 = shift(obj_5, subtract(target_loc, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.959996, def fdgjchhbacaheaafbeihciiafabcacdb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  direction = position(obj_5, obj_2)
  new_obj_5 = shift(obj_5, multiply(direction, (height(obj_5) + 1, 0)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 9.616131, def abcccacdcedjecedjgdecafbbgajbaaa(I):
  obj_2 = toobject(ofcolor(I, 2), I)  # Get object made of '2'
  obj_5 = toobject(ofcolor(I, 5), I)  # Get object made of '5'
  new_obj_5 = shift(obj_5, (lowermost(obj_2)-uppermost(obj_5) + 1, rightmost(obj_2)-leftmost(obj_5) + 1)) # Calculate shift and move object
  O = paint(cover(I, obj_5), new_obj_5)  # Paint the shifted object
  return O
 
14.0, 10.118835, def gadfbhbdcejaecidjjdeffbgdgcbbcfc(I):
  objs = fgpartition(I)
  obj2 = extract(objs, matcher(color, 2))
  obj5 = extract(objs, matcher(color, 5))
  new_obj5 = shift(obj5, gravitate(shift(obj5,(lowermost(obj2)-uppermost(obj5)+1,0)), obj2))
  O = paint(cover(I, obj5), new_obj5)
  return O
 
14.0, 10.165784, def bjbgbgfceffeejadjcbdgaacedejceda(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  right_space = len(I[0]) - rightmost(obj_2) - width(obj_5)
  shift_amount = (uppermost(obj_2) - uppermost(obj_5), 1) if right_space >= 0 else (uppermost(obj_2) - uppermost(obj_5), -width(obj_2) - width(obj_5) + 1) 
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.814989, def afifibhgebagegfbijaeabgdcchibbfa(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = (uppermost(obj2) - uppermost(obj5), leftmost(obj2) - leftmost(obj5))
  shifted_obj5 = shift(obj5, shift_amount)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 9.272278, def ddiegfjdfcgdejaiaiaajhijbidicjha(I):
  objs = objects(I, False, False, True)
  obj2 = extract(objs, lambda obj: color(obj) == 2)
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  O = paint(cover(I, obj5), shift(obj5, subtract(ulcorner(obj2), ulcorner(obj5))))
  return O
 
12.0, 5.9439125, def efhdejeeacafeddbjjcegecefgihajdf(I):
  obj_2 = toobject(ofcolor(I, 2), I) 
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - uppermost(obj_5), rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
19.0, 11.804944, def bfjebjeadjajedbjjafgfaijbfdgbdjg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_shift = rightmost(obj_2) - leftmost(obj_5) + 1
  v_shift = uppermost(obj_2) - uppermost(obj_5)
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(I, new_obj_5)
  return O
 
14.0, 7.987316, def fdbgcbcjefeaecefbccefcibjdeediid(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = add(lrcorner(obj_2), (0, 1))  
  shift_vector = subtract(target_location, ulcorner(obj_5)) 
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5) 
  return O
 
14.0, 10.137384, def cheabegjbijfefhdjiheahebcbdgbcda(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Extract '2' object
  obj5 = toobject(ofcolor(I, 5), I)  # Extract '5' object
  v_offset = branch(height(obj2) > 2, 1, 0)  # Conditional vertical offset
  new_obj5 = shift(obj5, (uppermost(obj2) - uppermost(obj5) + v_offset, rightmost(obj2) - leftmost(obj5) + 1 - width(obj5)))
  O = paint(cover(I, obj5), new_obj5)
  return O
 
14.0, 8.826614, def ceffcgfecdaaedffadacdjfeefcdjbbc(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Extract '2' object
  obj5 = toobject(ofcolor(I, 5), I)  # Extract '5' object
  h_shift = rightmost(obj2) - leftmost(obj5) + 1 - width(obj5)  # Horizontal shift calculation
  v_shift = uppermost(obj2) - uppermost(obj5) + max(0, height(obj2) - 2) # Vertical shift with max function
  O = paint(cover(I, obj5), shift(obj5, (v_shift, h_shift))) # Combine shifting and painting
  return O
 
12.0, 6.386543, def dggfahajcfefeaiaiaieagchgiegbbef(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_center_2 = center(obj_2)[1]
  target_right = (uppermost(obj_2), h_center_2 + width(obj_2) // 2) 
  target_left = (uppermost(obj_2), h_center_2 - width(obj_2) // 2 - width(obj_5) + 1) 
  target_position = target_right if target_right[1] < len(I[0]) else target_left
  new_obj_5 = shift(obj_5, subtract(target_position, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.0, 15.380992, def jaacffbjejadeggjabgeaccddafeiedg(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = (0, width(obj2) + 1)
  O = paint(cover(I, obj5), shift(obj5, shift_amount))
  return O 
 
14.0, 9.479035, def hdceaddbihdbeacdjhhdajiajdbdgcbj(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shift_amount = gravitate(obj5, shift(obj2, (0, width(obj2) + 1)))
  O = paint(cover(I, obj5), shift(obj5, shift_amount))
  return O
 
11.333333333333334, 5.7054906, def jdfejfiieecbefeebbghajddbhajicce(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  center2 = centerofmass(obj2)
  target_pos = (center2[0] - height(obj5) // 2, center2[1] + width(obj2) // 2 + 1)
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
16.0, 10.107242, def bfgjjcbdajecedadadhaddibdfbcjbff(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  empty_grid = canvas(0, (height(I), 1))  # Create a one-column empty grid
  O = paint(
       paint(cover(I, obj2), obj2), 
       shift(obj5, (uppermost(obj2) - uppermost(obj5), width(obj2) + 1))
  )
  return O
 
9.0, 15.263468, def dcadhbbdfaibegecbbidggedchbgdedi(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_offset = (height(obj_2) + 1) if uppermost(obj_5) > lowermost(obj_2) else (-height(obj_5) - 1)
  offset = (v_offset, width(obj_2) + 1)
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O 
 
7.666666666666667, 16.825024, def dbiadjeafaafejiiigdgeaabjchdfccj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  offset = (lowermost(obj_2) - uppermost(obj_5) + branch(uppermost(obj_5) > lowermost(obj_2), 1, -height(obj_5)), 
            rightmost(obj_2) - leftmost(obj_5) + width(obj_5) + 1)
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
8.333333333333334, 15.536198, def bjabfjdadbbfebghbbcfijfhcgaffeib(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = width(obj_2) + 1
  v_offset =  (height(obj_2) + height(obj_5) + 1) * sign(centerofmass(obj_5)[0] - centerofmass(obj_2)[0])
  offset = (v_offset, h_offset)
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
8.0, 16.612019, def adfcacceceabefacjcegfbfcjbibeadb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = width(obj_2) + 1
  v_offset = (height(obj_2) + 1) if uppermost(obj_5) > uppermost(obj_2) else (-height(obj_5) - 1)
  new_obj_5 = shift(obj_5, (v_offset, h_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.814989, def fcebdbjgfjdfeahcaeiabfcfaadjhecf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  shift_vector = subtract(ulcorner(obj_2), ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.835933, def ciieeaeagabgedjbaafabehbdcfecabc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = center(obj_2)
  target_position = (center_2[0] - height(obj_5) // 2, center_2[1]) 
  new_obj_5 = shift(obj_5, subtract(target_position, center(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 7.237071, def fecfiiaaficeebbabdcfaadjfdfcdcbb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  rel_pos = position(obj_5, obj_2)
  if rel_pos[0] <= 0: 
    shift_vector = (uppermost(obj_2) - lowermost(obj_5) - 1, 0)
  else:
    shift_vector = (uppermost(obj_2) - lowermost(obj_5), 0)
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.333333333333334, 7.584735, def bjageadffhfbecgdaaajieefcgedbccd(I):
    two = toobject(ofcolor(I, 2), I)
    five = toobject(ofcolor(I, 5), I)
    return paint(cover(I, five), shift(five, add((0, width(two) + 1), subtract(ulcorner(two), ulcorner(five)))))
 
13.666666666666666, 6.0004325, def ecagefdecageedjcidfgjbbhabcbdfcj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  leftmost_2_bottom_row = min(j for i, j in toindices(obj_2) if i == lowermost(obj_2)) 
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) + 1, leftmost_2_bottom_row - leftmost(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 6.785686, def acgceafgacbcefffidcfcfbhedafcfci(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  shift_amount = (lowermost(obj_2) - uppermost(obj_5) + 1, centerofmass(obj_2)[1] - centerofmass(obj_5)[1])
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.0, 11.839944, def ajcbdbbcafgieecfigegcaddfdeaigea(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2) - height(obj_5) - 1, leftmost(obj_2))  # Above
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 7.3180456, def ccfbhchdbjhbeaaaaddgdbadgjfgafid(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  
  # Determine vertical shift based on relative heights
  height_diff = height(obj_2) - height(obj_5)
  v_shift = (height_diff // 2) if height_diff >= 0 else -(-height_diff // 2)

  # Calculate horizontal shift 
  h_shift =  - (width(obj_5) + 1)

  # Combine shifts and apply
  total_shift = (v_shift, h_shift)
  new_obj_5 = shift(obj_5, total_shift)
  
  # Mirror horizontally 
  new_obj_5 = hmirror(new_obj_5)

  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.333333333333334, 5.993239, def iaaeejcdfhedebfcigjfgjhffddeigbc(I):
  obj2 = toobject(ofcolor(I, 2), I)  
  obj5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj2)
  mirrored_obj5 =  frozenset({(v, (i, 2 * center_2[1] - j)) for v, (i, j) in obj5})
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
12.0, 5.4814076, def gdcffiifbfbeebdgadebicecajbaceea(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  offset = gravitate(obj5, hmirror(obj2))
  mirrored_obj5 = shift(hmirror(obj5), offset)
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
12.666666666666666, 7.7250957, def caiffbeaffihedeiabajcchddfhdaddb(I):
  objs = objects(I, T, F, T)
  obj2 = extract(objs, lambda obj: color(obj) == 2) 
  obj5 = extract(objs, lambda obj: color(obj) == 5)
  mirror_axis = centerofmass(obj2)[1] 
  mirrored_obj5 = frozenset() 
  for v, (i, j) in obj5:
    new_j =  mirror_axis + (mirror_axis - j)
    mirrored_obj5 = insert((v, (i, new_j)), mirrored_obj5) 
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
13.333333333333334, 10.427213, def ebjdbfcejcafecgaabbidchediadbffe(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - lowermost(obj_5) - 1, rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 9.404821, def bgfchgebghiceaajjbeedccaddhghdcg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - lowermost(obj_5), leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.1470594, def gecfcciagacbefifbbfbdiccbcfgacab(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  ref_point = (uppermost(obj_2), rightmost(obj_2) + 1) 
  new_obj_5 = shift(obj_5, subtract(ref_point, lrcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
7.0, 17.047764, def ebhhcfdeajadeifjabebjcifdbbcajag(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  offset = (-height(obj_5), -width(obj_5) - 1)
  new_obj_5 = shift(obj_5, add(lrcorner(obj_2), offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.666666666666666, 7.82367, def gjdaacfbadibebhfjabgidfccahcfdfd(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    new_obj_5 = shift(obj_5, (uppermost(obj_2) - height(obj_5), rightmost(obj_2) - leftmost(obj_5) + 2))
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
7.0, 17.047764, def abibjjaifiieebaiicecbiabeacccdad(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  new_obj_5 = shift(obj_5, (center_2[0] - height(obj_5) + 1, center_2[1]))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.264585, def eaabgbfcfjifeeaiahfdeadcichbbhge(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    new_obj_5 = shift(obj_5, gravitate(obj_5, obj_2))
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
11.333333333333334, 6.1625705, def adcedgdbcccaejeebedgbagfffiadgea(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_diff = uppermost(obj_2) - height(obj_5)
  w_diff = rightmost(obj_2) - leftmost(obj_5)
  new_obj_5 = shift(obj_5, (h_diff, w_diff + (1 if h_diff == 0 else 2))) 
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.333333333333334, 8.58463, def hfcjfcbcdhicegaebbffcbecjeaafigb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  pos = position(obj_5, obj_2)
  new_obj_5 = shift(obj_5, (1 if pos[0] <= 0 else 0, 1 if pos[1] <= 0 else 0))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 5.943913, def abbbjgbifgebeeaiijdfiabffcfahabb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2), rightmost(obj_2) + 1) if hmatching(obj_2, obj_5) else (uppermost(obj_2), leftmost(obj_2) - width(obj_5))
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.153912, def bjabdcebccejeddcabcgceggbhhdfdfi(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  direction = position(obj_5, obj_2)
  target_offset = (1, 0) if direction == (1, 1) or direction == (1, -1) else (-1, 0) if direction == (-1, 1) or direction == (-1, -1) else (0, 1) if direction == (0, 1) else (0, -1)
  new_obj_5 = shift(obj_5, multiply(target_offset, width(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O 
 
12.666666666666666, 6.264585, def jbcdaeaaceicebdfacfedfidiieecaee(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  shift_vector = gravitate(obj_5, obj_2)
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 6.014071, def cdadacddfbbjecaiahbibjeedjbadjad(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  shift_vector = subtract((0, width(obj_2)) if hmatching(obj_2, obj_5) else (0, -width(obj_5)), ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.823471, def bdbjddebeeifeghajdbhaafaddgbhcgg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (center(obj_2)[0], rightmost(obj_2)) if hmatching(obj_2, obj_5) else (center(obj_2)[0], leftmost(obj_2) - 1)
  shift_vector = subtract(target_location, center(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 7.764271, def deciffibdbfaecfbjdcegegcebehbcjf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_i = uppermost(obj_2) - height(obj_5) if uppermost(obj_5) < uppermost(obj_2) else lowermost(obj_2)
  target_j = leftmost(obj_2) - width(obj_5) 
  shifted_obj_5 = shift(obj_5, (target_i - uppermost(obj_5), target_j - leftmost(obj_5)))
  O = paint(cover(I, obj_5), shifted_obj_5)
  return O
 
14.0, 6.836678, def jgagdfdajahfeecjaffdicahedjgjcff(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Extract object '2'
  obj5 = toobject(ofcolor(I, 5), I)  # Extract object '5'
  center2 = centerofmass(obj2)  # Find the center of mass for '2'
  center5 = centerofmass(obj5)  # Find the center of mass for '5'
  rel_pos = position(obj5, obj2)  # Determine relative position
  new_center5 = add(center2, multiply(rel_pos, shape(obj5)))  # Calculate new center for '5'
  offset = subtract(new_center5, center5)  # Calculate the offset
  mirrored_obj5 = shift(hmirror(obj5), offset)  # Mirror and shift '5'
  O = paint(cover(I, obj5), mirrored_obj5)  # Paint mirrored '5'
  return O
 
14.0, 8.951008, def eebgdeccccdjejgfafjdbehfhgdccfhh(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  ul2 = ulcorner(obj2)
  offset = subtract(ul2, ulcorner(obj5))
  mirrored_obj5 = shift(hmirror(obj5), offset)
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
12.666666666666666, 5.768037, def bgfcfggeejcieaebabgafgaifedajdbb(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  v_match = vmatching(obj2, obj5)  # Check for vertical matching
  target_obj5 = shift(hmirror(obj5), (height(obj2) if v_match else 0, 0))  # Calculate target position
  offset = subtract(ulcorner(target_obj5), ulcorner(obj5))  # Calculate the offset
  mirrored_obj5 = shift(obj5, offset)
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
12.0, 5.927905, def bbbbbcaheghbefdajfaeecdffcahddej(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - uppermost(obj_5), leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.333333333333334, 10.409824, def bidjddbfebdeeeagiiaejeejifdbhejf(I):
    obj_2 = toobject(ofcolor(I, 2), I)  # Get the '2' object
    obj_5 = toobject(ofcolor(I, 5), I)  # Get the '5' object
    
    # Calculate the offset to align bottom-right of '5' with top-left of '2'
    offset = (uppermost(obj_2) - lowermost(obj_5) - 1, leftmost(obj_2) - rightmost(obj_5) - 1) 
    
    new_obj_5 = shift(obj_5, offset)  # Move the '5' object
    O = paint(cover(I, obj_5), new_obj_5) # Update the grid 
    return O
 
14.0, 9.304889, def ibacaeeefiddecghadaafebgagefadba(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    
    # Calculate the new upper-left corner position of '5' object
    new_ulcorner = (lowermost(obj_2) - height(obj_5) , leftmost(obj_2))
    
    # Calculate the offset for shifting
    offset = subtract(new_ulcorner, ulcorner(obj_5))
    
    new_obj_5 = shift(obj_5, offset)
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
14.0, 9.469295, def fheddjicedbfedfaaejifeiebfjfcice(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    
    target_position = subtract(ulcorner(obj_2), (height(obj_5)-1, width(obj_5)-1)) # Calculate the target position
    offset = subtract(target_position, ulcorner(obj_5)) # Calculate the required offset
    
    new_obj_5 = shift(obj_5, offset)
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
13.666666666666666, 9.616131, def gefaiacjdbcieicijcdegbeieeadicja(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = add(lrcorner(obj_2), (1, 1)) 
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.023293, def bhahbfaeaaabefhaigdjjecdadcedegg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = astuple(center(obj_2)[0] + height(obj_5) // 2, rightmost(obj_2) + 1)
  new_obj_5 = shift(obj_5, subtract(target_location, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
7.0, 17.047764, def jedgafehdiideidcbdfedaajfecbacfe(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_shift = width(obj_2) + 1
  v_shift =  1
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.304889, def idacaiahdfhiedcfbfhbdabafbihecaf(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_j = leftmost(obj2)
  target_i = uppermost(obj2) if uppermost(obj5) < uppermost(obj2) else lowermost(obj2) - height(obj5)
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 7.9873157, def iefafhaffheeehcdaahaabbebeaaahdi(I):
  obj2 = toobject(ofcolor(I, 2), I)  # Extract the '2' object
  obj5 = toobject(ofcolor(I, 5), I)  # Extract the '5' object
  target_pos = add(lrcorner(obj2), (0, 1))  # Calculate target position for upper-left corner of '5'
  offset = subtract(target_pos, ulcorner(obj5))  # Calculate the offset to move the '5' object
  shifted_obj5 = shift(obj5, offset)  # Move the '5' object to the new position
  O = paint(cover(I, obj5), shifted_obj5)  # Paint the moved '5' object onto a clean canvas
  return O
 
12.0, 5.943913, def cgdabbdegcdcedddibfffffgebafdhhe(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_row = uppermost(obj2) # Determine the row for vertical alignment
  offset = (target_row - uppermost(obj5), rightmost(obj2) - leftmost(obj5) + 1) # Calculate offset for both rows and columns
  shifted_obj5 = shift(obj5, offset)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
7.0, 17.047764, def iedeciacjbebebfhihfaibghjfiibgbh(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  shifted_obj5 = shift(obj5, (uppermost(obj2) - uppermost(obj5), width(obj2) + 1))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.333333333333334, 10.001761, def cfebfchbbadhefbejedjdfbffdibhdaa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) + 1, leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O 
 
14.0, 8.435896, def fcdaeefbeacgeeecbbffjgeabdihgdhg(I):
    obj2 = toobject(ofcolor(I, 2), I)
    obj5 = toobject(ofcolor(I, 5), I)
    new_obj5 = shift(obj5, gravitate(obj5, shift(obj2, (1, -1))))
    O = paint(cover(I, obj5), new_obj5)
    return O
 
14.0, 10.91959, def cedeaiadedeieficjgccadcgcaeiggeg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  center_5 = centerofmass(obj_5)
  
  # Calculate offset for left position
  offset = (center_2[0] - center_5[0], center_2[1] - center_5[1] - 1)
  
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.435896, def abajdcdgiiddeaffiagabdffefafjijf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, gravitate(obj_5, obj_2))
  
  # Ensure '5' is always on the left, even if already adjacent
  if leftmost(new_obj_5) >= leftmost(obj_2):
    new_obj_5 = shift(new_obj_5, LEFT)
  
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.333333333333334, 6.3505306, def geaigabbcbaaeagbacdaeegijafhebea(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  
  # Find closest point on '2' to '5'
  closest_point = argmin(toindices(obj_2), lambda p: manhattan({p}, obj_5))
  offset = subtract(closest_point,  ulcorner(obj_5))
  offset = add(offset, LEFT)
  
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 6.3340516, def ffccdfbghiajegcfbcifbfafdjddbfdf(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    h, w = shape(obj_5)
    target_location = add(lrcorner(obj_2), (1, -h)) 
    shift_vector = subtract(target_location, ulcorner(obj_5))
    new_obj_5 = shift(obj_5, shift_vector)
    O = paint(cover(I, obj_5), new_obj_5)
    return O
 
14.0, 7.9873157, def jddibhchgfebedhfjbdfbejffbdbchhf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_adj = branch(even(center(obj_2)[1]), 1, 0)
  target_location = add(lrcorner(obj_2), (v_adj, 1))
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.639075, def cbbcfbaaedheedjfjffbbabcgbhedcbb(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_i = uppermost(obj2) - height(obj5)
  target_j = leftmost(obj2)
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 8.814989, def gbehggafcfedebbajgcbeffbgiiccide(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  offset = (uppermost(obj2) - uppermost(obj5), leftmost(obj2) - leftmost(obj5))
  shifted_obj5 = shift(obj5, offset)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.0, 6.142504, def beffaacfaddfebieaahcadacjbjhahge(I):
  two_indices = ofcolor(I, 2)
  five_indices = ofcolor(I, 5)
  shift_amount = subtract(first(two_indices), first(five_indices))
  new_five_indices = apply(lambda idx: add(idx, shift_amount), five_indices)
  O = I
  for i, row in enumerate(I):
    for j, val in enumerate(row):
      if (i, j) in five_indices:
        O = fill(O, 0, {(i, j)})
      if (i, j) in new_five_indices:
        O = fill(O, 5, {(i, j)})
  return O
 
11.333333333333334, 5.705491, def iaidechabcbbebjjjiiagcifdfbadadi(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_pos = add(ulcorner(obj2), (1, width(obj2))) 
  shifted_obj5 = shift(obj5, subtract(target_pos, ulcorner(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.666666666666666, 8.289605, def bdiedadiajcbebfjjgbbcfbefdgiffea(I):
  obj2 = objects(I, T, F, T)
  obj5 = first(colorfilter(obj2, 5))
  target_corner = urcorner(toobject(ofcolor(I, 2), I))
  shift_vector = subtract(target_corner, urcorner(obj5))
  shifted_obj5 = shift(obj5, shift_vector)
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
12.666666666666666, 7.8922434, def dbfacdbfgcafeddcajiebfeddhededed(I):
  objs = objects(I, True, False, True)
  obj2 = first(colorfilter(objs, 2))
  obj5 = first(colorfilter(objs, 5))
  h_shift = min(0, width(obj2) - leftmost(obj5) + 1) 
  v_shift = min(0, height(obj2) - uppermost(obj5) + 1)
  O = paint(cover(I, obj5), shift(obj5, (v_shift, h_shift)))
  return O
 
12.666666666666666, 6.335901, def jjhfaaefbcdgegbaibbcdgfjdhdggchf(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  new_obj5 = {(v, add((i, j), (1 - uppermost(obj5), width(obj2) - leftmost(obj5) + 1))) for v, (i, j) in obj5}
  O = paint(cover(I, obj5), new_obj5)
  return O
 
14.0, 6.0325933, def afacbeajeibjehccbjagcccbifjgeaca(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  v_shift = max(0, height(obj2) - uppermost(obj5) + 1)
  h_shift = max(0, width(obj2) - leftmost(obj5) + 1)
  shifted_obj5 = shift(obj5, (v_shift, h_shift))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 7.9873157, def eecedbbejjbhegeejjcbgfghdefeaccg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5), rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.264585, def bhhhbebbgjefebeejfidijfebcgefcfb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  direction = gravitate(obj_5, obj_2)
  new_obj_5 = shift(obj_5, direction)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
18.333333333333332, 11.156115, def haaacdhabfgaecccbiafbcceahaaiafa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5), rightmost(obj_2) - leftmost(obj_5) + 1))
  O = paint(I, new_obj_5)
  return O
 
14.0, 9.043509, def cacgbdeiibgceeabbfbhgcdgffbededb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  rel_pos = position(obj_5, obj_2)
  shift_amount = (rel_pos[0] * (height(obj_5) + 1), rel_pos[1] * (width(obj_5) + 1))
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.4085364, def hjaefacdhfieeadbjfdfbbbbcafagdfc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - uppermost(obj_5), leftmost(obj_2) - leftmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.814989, def cbbghbigffbdegdciafbjagccgefiaia(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2), leftmost(obj_2)) 
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
20.333333333333332, 12.843038, def cccdjddfgedfebfdaicfacgafjacdhbf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_indices = {(uppermost(obj_2) + i, leftmost(obj_2) + j) for i in range(height(obj_5)) for j in range(width(obj_5))}
  new_obj_5 = recolor(5, target_indices)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.0, 12.568357, def bbcdfbjfabjgehjdjbahafiffbjdgdaa(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_i = uppermost(obj2) - height(obj5) - 1
  target_j = rightmost(obj2) + 1
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
10.0, 5.3964767, def eefbcjeabcaceficbiejjjaecahifbga(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  new_obj_5 = shift(obj_5, (center_2[0] - centerofmass(obj_5)[0], leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.333333333333334, 8.082264, def beecbhgdhajfehebadeccgaajcaefedf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2), leftmost(obj_2) - width(obj_5) - 1)
  new_obj_5 = shift(normalize(obj_5), target_location)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
8.333333333333334, 15.973278, def ahejgaejjcjheedfbbcebjaaeibgghih(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = 1 if width(obj_2) == 1 else (width(obj_2) - width(obj_5)) // 2 
  new_obj_5 = shift(obj_5, (height(obj_2), h_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.333333333333334, 11.342058, def cebiccjgfcjaehbfidgeebejjdbcgfff(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (lowermost(obj_2) - uppermost(obj_5) + 1, 0))
  new_obj_5 = shift(new_obj_5, (0, rightmost(obj_2) - leftmost(new_obj_5) + (1 if width(obj_2) == 1 else (width(obj_2) - width(obj_5)) // 2)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.666666666666666, 6.0004325, def djhdgggaacheejdbjeaibjffibbdefia(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_ulcorner = (lowermost(obj_2) + 1, leftmost(obj_2) + (0 if width(obj_2) > 1 else 1)) 
  offset = subtract(target_ulcorner, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.333333333333334, 5.70205, def bieccfgabbbcehgajbfichhegiccbbfa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  direction = position(obj_5, obj_2)
  target_offset = (-1, 0) if direction[0] == -1 else (1, 0) if direction[0] == 1 else (0, -1) if direction[1] == -1 else (0, 1)
  new_obj_5 = shift(obj_5, target_offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 5.8153176, def fbccfadaffcfecbjjbfedjafjjbdaefd(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_diff = uppermost(obj_5) - uppermost(obj_2)
  v_diff = leftmost(obj_5) - leftmost(obj_2)
  target_offset = (-1, 0) if h_diff < 0 else (1, 0) if h_diff > 0 else (0, -1) if v_diff < 0 else (0, 1)
  new_obj_5 = shift(obj_5, target_offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 7.1803036, def hbdbgejibabaefhgbfhdadfffjcfdeia(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, (sign(uppermost(obj_2) - uppermost(obj_5)), sign(leftmost(obj_2) - leftmost(obj_5))))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.333333333333334, 12.250996, def bcgdbjabgcfaedgfjgfdddaicbcgdcij(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  new_obj5 = shift(obj5, (uppermost(obj2) - height(obj5) - 1 - uppermost(obj5), leftmost(obj2) - rightmost(obj5) - 1))
  O = paint(cover(I, obj5), new_obj5)
  return O
 
11.333333333333334, 7.1360517, def jfjdbefeeieaebffaaeiicfefhfacddi(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2), leftmost(obj_2) - width(obj_5) - 1)
  new_obj_5 = shift(obj_5, (target_location[0] - uppermost(obj_5), target_location[1]))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.666666666666666, 5.7678967, def aghefeajabieegfeichcbecffjjacdhe(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_offset = 1 if height(obj_2) > 3 else 0
  new_obj_5 = shift(obj_5, (uppermost(obj_2) - uppermost(obj_5) + v_offset, leftmost(obj_2) - rightmost(obj_5) - 1))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 5.32554, def ccfcfadfecceebadjhccabfjjabdibhd(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_shift = max(0, uppermost(obj_2) - uppermost(obj_5) + (height(obj_2) > 3))
  h_shift = leftmost(obj_2) - rightmost(obj_5) - 1
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.639075, def fhjjbjcfbeedeaibaieaccfegdgfjdef(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_loc = (uppermost(obj_2) - height(obj_5), leftmost(obj_2)) 
  offset = subtract(target_loc, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.0, 7.2370706, def fdadfaacdccaeiaebdfcgcgfaibcfbcb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2) - height(obj_5), leftmost(obj_2) + width(obj_2) // 2 - width(obj_5) // 2) if hmatching(obj_2, obj_5) else (uppermost(obj_2) + height(obj_2) // 2 - height(obj_5) // 2, leftmost(obj_2) - width(obj_5))
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.959996, def hciedbaffeebecefaffffafbbgebchbi(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 = shift(obj_5, gravitate(obj_5, obj_2))
  new_obj_5 = shift(new_obj_5, subtract(center(obj_2), center(new_obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
11.0, 10.074039, def jddbdhadfeejecacjdecjaddgiahbajf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_diff = uppermost(obj_5) - uppermost(obj_2)
  v_diff = leftmost(obj_5) - leftmost(obj_2)
  target_offset = (-height(obj_5), width(obj_2) // 2 - width(obj_5) // 2) if h_diff > 0 else (height(obj_2), width(obj_2) // 2 - width(obj_5) // 2) if h_diff < 0 else (height(obj_2) // 2 - height(obj_5) // 2, -width(obj_5)) if v_diff > 0 else (height(obj_2) // 2 - height(obj_5) // 2, width(obj_2))
  new_obj_5 = shift(obj_5, target_offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.333333333333334, 10.409824, def ejfgidbgjddbehfbjfhejebfdbedcddf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_i = uppermost(obj_2) - height(obj_5) if uppermost(obj_5) > uppermost(obj_2) else lowermost(obj_2) 
  target_j = leftmost(obj_2) - width(obj_5) if leftmost(obj_5) > leftmost(obj_2) else rightmost(obj_2)
  new_obj_5 = shift(obj_5, (target_i - uppermost(obj_5), target_j - leftmost(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
7.0, 17.047764, def difacahfjjbbeiedaebhdbjgaejjedie(I):
    obj2 = toobject(ofcolor(I, 2), I)
    obj5 = toobject(ofcolor(I, 5), I)
    h = uppermost(obj2) - height(obj5) - 1
    w = rightmost(obj2) + 1
    O = paint(cover(I, obj5), shift(hmirror(obj5), (h, w)))
    return O
 
11.666666666666666, 11.550988, def ddeajchcbifbeeebjhdjbcfdbedbcdgc(I):
    obj2 = toindices(ofcolor(I, 2))
    obj5 = toindices(ofcolor(I, 5))
    offset = (uppermost(obj2) - height(toobject(obj5, I)) - 1 - uppermost(toobject(obj5, I)), rightmost(obj2) + 1 - leftmost(toobject(obj5, I)))
    O = paint(cover(I, toobject(obj5, I)), shift(hmirror(toobject(obj5, I)), offset))
    return O
 
12.0, 12.319316, def dagbiabacehhedagajbabfbchaedjfgd(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)

  # Calculate offset based on position and size 
  offset = (
    uppermost(obj2) + height(obj2) + 1 - uppermost(obj5), 
    leftmost(obj2) - width(obj5) - (leftmost(obj5) if leftmost(obj5) > leftmost(obj2) else 0)
  )

  # Apply transformations directly through offset
  shifted_obj5 = shift(obj5, offset)

  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
9.333333333333334, 15.9923725, def ahjcaijcchbdecabjgjcaeedecbdhche(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)

  # Define transformation functions based on relative position
  transformations = {
    (1, -1): lambda x: shift(x, (height(obj2) + 1, -width(obj5) - 1)),  # Above and Left
    (-1, -1): lambda x: shift(hmirror(x), (height(obj2) + 1, -width(obj5) - 1)), # Below and Left
    (1, 1):  lambda x: shift(rot270(x), (height(obj2) + 1, 0)),  # Above and Right
    (-1, 1): lambda x: shift(hmirror(rot270(x)), (height(obj2) + 1, 0)) # Below and Right
  }

  # Get relative position and apply the correct transformation
  rel_pos = position(obj5, obj2) 
  transform_func = transformations.get(rel_pos, lambda x: x) 
  transformed_obj5 = transform_func(obj5)

  O = paint(cover(I, obj5), transformed_obj5) 
  return O
 
12.666666666666666, 7.208682, def facddejgebfbefdibgibffbacffjgbhi(I):
  obj_2 = toobject(ofcolor(I, 2), I) 
  obj_5 = toobject(ofcolor(I, 5), I)
  
  # Calculate Shift Amount 
  shift_amount = (uppermost(obj_2) - lowermost(obj_5) - 1, rightmost(obj_2) - rightmost(obj_5))
  
  # Shift and Paint
  shifted_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), shifted_obj_5)
  return O 
 
12.666666666666666, 6.639075, def ecedhbbafadceddcicacaehiibeaeecf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  
  # Calculate Relative Position
  rel_pos = position(obj_5, obj_2) 
  target_pos = (uppermost(obj_2) - height(obj_5), rightmost(obj_2) - width(obj_5) + 1) if rel_pos[1] == 1 else (
    uppermost(obj_2) - height(obj_5), leftmost(obj_2)
  )
  
  # Shift and Paint
  shifted_obj_5 = shift(obj_5, subtract(target_pos, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), shifted_obj_5)
  return O
 
14.0, 9.52102, def jeiaediaccdhefdaiajedahabfdeehbb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)

  # Calculate Shift using Centers of Mass
  shift_amount = (centerofmass(obj_2)[0] - centerofmass(obj_5)[0], rightmost(obj_2) - rightmost(obj_5))

  # Shift and Paint
  shifted_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), shifted_obj_5)
  return O
 
14.0, 7.1803036, def dfdfacccfjbeeadiihaefdieacdjdidi(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  center_5 = centerofmass(obj_5)
  offset = (sign(center_2[0] - center_5[0]), -1)
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.955355, def jfcbhhifdecaebcbjjiaeaefgdajaedd(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = add(ulcorner(obj_2), (-height(obj_5), -1))
  new_obj_5 = shift(obj_5, subtract(target_location, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 6.890631, def hfcfbdbcgghbefcdiciaicbfbcceeeec(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  
  # Find closest '2' cell to the '5' object
  closest_2_cell = argmin(toindices(obj_2), lambda p: manhattan({p}, obj_5))

  # Calculate offset for the '5' object's upper-left corner
  offset = subtract(closest_2_cell, add(ulcorner(obj_5), (height(obj_5), 0)))
  
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 10.427213, def debafdhfcdciecgaiebiegjedfdbfjgg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2) - height(obj_5), rightmost(obj_2) + 1)
  shift_vector = subtract(target_location, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.1881886, def dafeahbadfbcechfihddegaagieefdbc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = add(urcorner(obj_2), (NEG_ONE, ONE))
  O = paint(cover(I, obj_5), shift(obj_5, subtract(target_location, ulcorner(obj_5))))
  return O
 
12.333333333333334, 10.001761, def fgadcebaheiiebbcbjidbdbcgjdfbfjh(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  h_shift = leftmost(obj2) - width(obj5) - leftmost(obj5)
  v_shift = uppermost(obj2) - uppermost(obj5) + (height(obj2) if uppermost(obj5) > uppermost(obj2) else 0)
  shifted_obj5 = shift(obj5, (v_shift, h_shift))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
13.666666666666666, 9.616131, def idbabbfcbaaaefbbifddaedbeigdeegd(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_j = rightmost(obj2) + 1
  offset = (lowermost(obj2) + 1 - uppermost(obj5), target_j - leftmost(obj5))
  shifted_obj5 = shift(obj5, offset)  
  O = paint(cover(I, obj5), shifted_obj5 if uppermost(obj5) > uppermost(obj2) else hmirror(shifted_obj5))  
  return O 
 
13.0, 6.9796433, def dfabafdgjaagebfjigdaehfaehffefdd(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_pos = add(lrcorner(obj2), (1, -width(obj5)))
  obj5 = hmirror(obj5) if uppermost(obj5) < uppermost(obj2) else obj5
  offset = subtract(target_pos, ulcorner(obj5))
  O = paint(cover(I, obj5), shift(obj5, offset))
  return O 
 
9.333333333333334, 13.68797, def baabhfbhbccbeghgbfefcdbacdhaegja(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  v_shift = height(obj2) + 1 
  h_shift = rightmost(obj2) + 1 - leftmost(obj5)
  shifted_obj5 = shift(obj5, (v_shift, h_shift))
  O = paint(
      cover(I, obj5), 
      hmirror(shifted_obj5) if uppermost(obj5) < uppermost(obj2) else shifted_obj5
  )
  return O
 
13.666666666666666, 6.7473, def gjfffcfjgaffedfjaccchabcjifbhbhf(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target = add(lrcorner(obj2), (1, 1 - width(obj5)))  
  offset = subtract(target, ulcorner(obj5))
  transformed_obj5 = shift(hmirror(obj5) if uppermost(obj5) < uppermost(obj2) else obj5, offset)
  O = paint(cover(I, obj5), transformed_obj5)
  return O
 
17.666666666666668, 7.7049665, def dieegaacdfhhehifihbgcdfcdecgcjce(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  offset = (uppermost(obj_2) - uppermost(obj_5), leftmost(obj_2) - rightmost(obj_5) - 1)
  new_obj_5 = shift(obj_5, offset) 
  O = paint(I, new_obj_5)
  return O
 
11.0, 11.839944, def fhjbagigcccfejfjbcajgcjgacbeddeg(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (uppermost(obj_2) - height(obj_5) - 1, leftmost(obj_2))
  O = paint(cover(I, obj_5), shift(obj_5, subtract(target_location, ulcorner(obj_5))))
  return O
 
16.666666666666668, 6.075104, def checbfcffcfbeahcaffdcebadfhcccaa(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  new_obj_5 =  shift(obj_5, (uppermost(obj_2) - height(obj_5) - 1 - uppermost(obj_5), leftmost(obj_2) - leftmost(obj_5)))
  O = paint(I, new_obj_5) if not intersection(toindices(obj_5), toindices(new_obj_5)) else paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.008705, def baggdifdfidbefagicacfbfiagghhcbj(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_corner = branch(vmatching(obj_2, obj_5), lrcorner(obj_2), urcorner(obj_2))
  target = add(target_corner, (1, -height(obj_5)))
  O = paint(cover(I, obj_5), shift(obj_5, subtract(target, ulcorner(obj_5))))
  return O
 
12.666666666666666, 5.768037, def bbjdjdjchdefeajijgcegbfecebdbicf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_shift = branch(hmatching(obj_2, obj_5), 0, width(obj_5) * position(obj_5, obj_2)[1])
  v_shift = branch(vmatching(obj_2, obj_5), -height(obj_5), 0)
  O = paint(cover(I, obj_5), shift(obj_5, (v_shift, h_shift)))
  return O
 
12.666666666666666, 9.770874, def hddabadbbcabeifgjjdcafegaedibddh(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    target = branch(
        vmatching(obj_2, obj_5),
        add(lrcorner(obj_2), (1, -height(obj_5))),
        add(urcorner(obj_2), (-width(obj_5), 0))
    )
    O = paint(cover(I, obj_5), shift(obj_5, subtract(target, ulcorner(obj_5))))
    return O
 
14.0, 9.129147, def eegidgehceadedfajefgjfiifhbadeeg(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    shift_vector = branch(
        vmatching(obj_2, obj_5),
        subtract(add(lrcorner(obj_2), (1, -height(obj_5))), ulcorner(obj_5)),
        subtract(add(urcorner(obj_2), (0, height(obj_5))), lrcorner(obj_5))
    )
    O = paint(cover(I, obj_5), shift(obj_5, shift_vector))
    return O
 
10.0, 9.625686, def daeaejgeeaaeeaciaadffhjccfiaehei(I):
    obj_2 = toobject(ofcolor(I, 2), I)
    obj_5 = toobject(ofcolor(I, 5), I)
    h_direction = position(obj_5, obj_2)[1]
    target_corner = branch(vmatching(obj_2, obj_5), lrcorner(obj_2), urcorner(obj_2))
    target = add(target_corner, (h_direction * width(obj_5), -height(obj_5)))
    O = paint(cover(I, obj_5), shift(obj_5, subtract(target, ulcorner(obj_5))))
    return O
 
14.0, 10.72842, def cddfgaaeciccecebajcgadbchgiccabe(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  mirror_axis = rightmost(obj2) 
  shifted_obj5 = frozenset((v, (i, 2*mirror_axis - j)) for v, (i, j) in obj5) 
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
14.0, 9.484025, def dabfiaaifbafejabjbacfcfbbgiaggcd(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  mirror_axis = rightmost(obj2)
  mirrored_obj5 =  hmirror(shift(obj5, (0, -2 * (centerofmass(obj5)[1] - mirror_axis))))
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
35.666666666666664, 12.660909, def dfjcedajiefcecaabdhgiiajjddfjajb(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  obj2_indices = toindices(obj2)
  mirrored_obj5 = frozenset((5, (i, 2*j - k)) for (i, j) in obj2_indices for (v, (k, l)) in obj5)
  O = paint(cover(I, obj5), mirrored_obj5)
  return O
 
14.0, 7.4085364, def deccjfefeheaebbgjbaaheheagbdabie(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_loc = (uppermost(obj_2) + branch(height(obj_2) > 3, 0, (height(obj_2) // 2) - (height(obj_5) // 2)), leftmost(obj_2) - 1)
  new_obj_5 = shift(obj_5, subtract(target_loc, ulcorner(obj_5)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 8.814989, def gejibadecejdegfbaaedfdfedcgcbbbd(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  
  offset = subtract(ulcorner(obj_2), ulcorner(obj_5))
  
  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 9.871649, def bgcegbebjgdfeafbifajiieabcbaaaai(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)

  target_corner = branch(portrait(obj_2), ulcorner(obj_2), llcorner(obj_2)) 
  offset = subtract(target_corner, ulcorner(obj_5))

  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.313706, def bdbhbacffbbfedhdjchddjdbfagbbhec(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)

  move_direction = position(obj_5, obj_2)
  offset = multiply(move_direction, shape(obj_5)) 

  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.956853, def ecfcegcdecibejaciaageffacfifbafc(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)

  target_location = branch(
      portrait(obj_2), 
      ulcorner(obj_2), 
      (uppermost(obj_2), leftmost(obj_2) + width(obj_2) - width(obj_5))
  )
  offset = subtract(target_location, ulcorner(obj_5))

  new_obj_5 = shift(obj_5, offset)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.500699, def ejabjbaebfcdeacebidjfdcaffddgfgf(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_location = (
    center(obj_2)[0] if vmatching(obj_2, obj_5) else center(obj_2)[0] + sign(center(obj_5)[0] - center(obj_2)[0]), 
    center(obj_2)[1] if hmatching(obj_2, obj_5) else center(obj_2)[1] + sign(center(obj_5)[1] - center(obj_2)[1])
  )
  shift_vector = subtract(target_location, center(obj_5))
  new_obj_5 = shift(obj_5, shift_vector)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
10.666666666666666, 5.367026, def ceecabccaieaeejabbjgafccdcbdcaec(I):
  obj2 = toobject(ofcolor(I, 2), I)
  obj5 = toobject(ofcolor(I, 5), I)
  target_j = leftmost(obj2) - width(obj5)
  target_i = uppermost(obj2) if uppermost(obj5) < uppermost(obj2) else lowermost(obj2) - height(obj5)
  shifted_obj5 = shift(obj5, (target_i - uppermost(obj5), target_j - leftmost(obj5)))
  O = paint(cover(I, obj5), shifted_obj5)
  return O
 
11.333333333333334, 5.549113, def dcbjabibajdaecafacgeecfgebibbbbj(I):
  obj2 = toobject(ofcolor(I, 2), I) # Extract object made of '2'
  obj5 = toobject(ofcolor(I, 5), I) # Extract object made of '5'
  new_obj5 = shift(obj5, (-(uppermost(obj2) - 1), rightmost(obj2) - leftmost(obj5) + 1)) # Calculate the shift for '5' based on '2'
  O = paint(cover(I, obj5), new_obj5) # Paint the shifted '5' object onto a blank canvas
  return O
 
12.333333333333334, 6.57527, def edefhgdccagaebigaeegaffcichdefgb(I):
  objs = objects(I, True, False, True) # Get all objects (without background)
  obj2 = extract(objs, lambda obj: color(obj) == 2) # Find the '2' object
  obj5 = extract(objs, lambda obj: color(obj) == 5) # Find the '5' object
  target_row = uppermost(obj2) - height(obj5) # Determine the target top row for '5'
  new_obj5 = {(v, (target_row + i, rightmost(obj2) + 1 + j)) for (v, (i, j)) in normalize(obj5)} # Normalize '5', shift, and paint
  O = paint(cover(I, obj5), new_obj5)
  return O
 
12.333333333333334, 10.409824, def dhfcbbdeddfbegbbagjacibbfdceacib(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  v_shift = uppermost(obj_2) - uppermost(obj_5) - height(obj_5)
  h_shift = leftmost(obj_2) - rightmost(obj_5) - 1
  new_obj_5 = shift(obj_5, (v_shift, h_shift))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
14.0, 10.528329, def dffjedeadbebeahdiceccfdjibcjfdeb(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = centerofmass(obj_2)
  center_5 = centerofmass(obj_5)
  shift_amount = subtract(center_2, center_5)
  new_obj_5 = shift(obj_5, subtract(shift_amount, (height(obj_5)//2, -width(obj_5)//2)))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
13.333333333333334, 6.955355, def cadeeafeafifegigbeaacfgfbfgdedda(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  target_position = subtract(ulcorner(obj_2), (height(obj_5), 1))
  shift_amount = subtract(target_position, ulcorner(obj_5))
  new_obj_5 = shift(obj_5, shift_amount)
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
9.333333333333334, 15.348779, def gdfcjhegceiaeeccihaddhafhabddfae(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  h_offset = leftmost(obj_2) - leftmost(obj_5)
  v_offset = height(obj_2) if height(obj_2) > 1 else height(obj_2) + 1
  new_obj_5 = shift(obj_5, (v_offset, h_offset))
  O = paint(cover(I, obj_5), new_obj_5)
  return O
 
12.666666666666666, 6.2130985, def ccijcdegahcbegddbeceaafcfdedfeac(I):
  obj_2 = toobject(ofcolor(I, 2), I)
  obj_5 = toobject(ofcolor(I, 5), I)
  center_2 = center(obj_2)
  center_5 = center(obj_5)
  
  # Determine movement direction based on relative positions
  if center_5[0] < center_2[0]:
    i = 1
  else:
    i = -1
  if center_5[1] < center_2[1]:
    j = 1
  else:
    j = -1

  # Find first touching position
  while not adjacent(obj_5, obj_2):
    obj_5 = shift(obj_5, (i, j))

  O = paint(cover(I, toobject(ofcolor(I, 5), I)), obj_5)
  return O
 
