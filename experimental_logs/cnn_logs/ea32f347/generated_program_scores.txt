4.75, 2.0516675, def hjchadaddadbecafifegeagdghfegafa(I):
  objs = objects(I, T, F, T)
  objs_sorted = order(totuple(objs), size)
  largest = first(objs_sorted)
  second_largest = recolor(4, first(remove(largest, objs_sorted)))
  third_largest = recolor(2, first(remove(second_largest, objs_sorted)))
  remaining_objs = remove(third_largest, remove(second_largest, remove(largest, objs)))
  O = paint(paint(paint(I, largest), second_largest), third_largest)
  for obj in remaining_objs:
    O = paint(O, recolor(1, obj))
  return O
 
11.5, 2.916679, def ggebdffadhdcejhiadgadfaeffcdedbi(I):
  objs = totuple(objects(I, T, F, T))
  O = I
  for i in range(size(objs)):
    obj = objs[i]
    color_to_paint = 5 if i == 0 else (4 if i == 1 else (2 if i == 2 else 1))
    O = paint(O, recolor(color_to_paint, obj))
  return O
 
6.25, 2.2497191, def gfjhdafaaidheggcbgdhgdcidccbeied(I):
  objs = objects(I, T, F, T)
  obj_sizes = apply(size, objs)
  sorted_sizes = order(totuple(obj_sizes), lambda x: -x)
  mapping = {sorted_sizes[i]: [5, 4, 2, 1][i] for i in range(min(3, size(sorted_sizes)))}
  O = I
  for obj in objs:
    obj_size = size(obj)
    O = paint(O, recolor(mapping.get(obj_size, 1), obj))
  return O
 
3.75, 0.9461346, def hcibjcbbdeajeibdihjafehabefdfbeb(I):
    objs = objects(I, T, F, T) 
    largest = argmax(objs, size)
    remaining = objs - {largest}
    horizontal = argmax(remaining, width) if remaining else None
    other = first(remaining - {horizontal}) if horizontal and len(remaining) > 1 else None
    O = fill(I, ONE, largest)
    O = fill(O, TWO, horizontal) if horizontal else O
    O = fill(O, FOUR, other) if other else O
    return O
 
2.5, 1.0305303, def bbaeeeffedhaeedbibbafjfhbadacccb(I):
    objs = sorted(objects(I, T, F, T), key=size)
    O = I
    for i, obj in enumerate(objs):
        if i == len(objs) - 1: 
            O = fill(O, ONE, obj) 
        elif width(obj) > height(obj):
            O = fill(O, TWO, obj)
        else:
            O = fill(O, FOUR, obj)
    return O
 
5.75, 1.2837371, def ciggcjjajbeeedejadgihedagagcfcbd(I):
    objs = objects(I, T, F, T)
    O = I
    if len(objs) > 0:
        largest = argmax(objs, size)
        O = fill(O, ONE, largest)
        objs = objs - {largest}
    if len(objs) > 0:
        horizontal = argmax(objs, lambda obj: width(obj) * 100 + height(obj))
        O = fill(O, TWO, horizontal)
        objs = objs - {horizontal}
    if len(objs) > 0:
        O = fill(O, FOUR, first(objs))
    return O
 
87.0, 19.23909, def iadfdjbcibdaeehibjghfbccdjbedbdf(I):
  objs = objects(I, T, F, F)
  O = I
  for obj in objs:
    if len(obj) < 5:
      O = paint(O, recolor(2, obj))
    elif len(obj) == 5:
      O = paint(O, recolor(4, obj))
    else:
      O = paint(O, recolor(1, obj))
  return O
 
1.0, 0.59308875, def dbiachdeeadjefgejdedgfcfffedhbaf(I):
  O = canvas(mostcolor(I), shape(I))
  for i in range(height(I)):
    for j in range(width(I)):
      if I[i][j] != mostcolor(I):
        obj = next((obj for obj in objects(I, T, F, F) if (i, j) in toindices(obj)), None)
        if len(obj) < 5:
          O = fill(O, 2, {(i, j)})
        elif len(obj) == 5:
          O = fill(O, 4, {(i, j)})
        else:
          O = fill(O, 1, {(i, j)})
  return O
 
6.75, 3.2754562, def ccfcfdgdcjebeajebdbefedcheheaecd(I):
  objs = objects(I, T, T, T) 
  largest = argmax(objs, size)
  remaining = remove(largest, objs)
  second_largest = argmax(remaining, size)
  furthest = argmax(remaining, lambda obj: manhattan(obj, largest))
  O = paint(paint(paint(canvas(0, shape(I)), recolor(1, largest)), recolor(2, second_largest)), recolor(4, furthest))
  return O
 
7.75, 1.6005956, def chchbhbjgijaecabiiifdfddabafcfcj(I):
  objs = sorted(objects(I, T, T, T), key=size, reverse=True)
  O = I
  if len(objs) > 0:
    O = paint(canvas(0, shape(I)), recolor(1, objs[0]))
  if len(objs) > 1:
    O = paint(O, recolor(2, objs[1]))
  if len(objs) > 2:
    furthest = argmax(objs[2:], lambda obj: manhattan(obj, objs[0]))
    O = paint(O, recolor(4, furthest))
  return O
 
7.75, 3.417602, def abhbgjcgddecedfcadfhdhdaieedhfhe(I):
  objs = objects(I, T, T, T)
  if len(objs) == 0: 
    return I
  largest = argmax(objs, size)
  O = recolor(1, largest)
  if len(objs) == 1:
    return paint(canvas(0, shape(I)), O)
  remaining = remove(largest, objs)
  second_largest = argmax(remaining, size)
  O = combine(O, recolor(2, second_largest))
  if len(objs) == 2:
    return paint(canvas(0, shape(I)), O)
  furthest = argmax(remaining, lambda obj: manhattan(obj, largest))
  O = combine(O, recolor(4, furthest))
  return paint(canvas(0, shape(I)), O)
 
0.0, 0.0, def fffhbfegeebeehegjeegjcceeeejfcfd(I):
  objs = objects(I, T, F, T)
  sorted_objs = order(totuple(objs), lambda obj: -size(obj))
  largest = first(sorted_objs)
  second_largest = first(remove(largest, sorted_objs))
  third_largest = first(remove(second_largest, remove(largest, sorted_objs)))
  O = paint(paint(paint(I, recolor(1, largest)), recolor(4, second_largest)), recolor(2, third_largest))
  for obj in objs:
    if obj not in (largest, second_largest, third_largest):
      O = paint(O, recolor(1, obj))
  return O
 
