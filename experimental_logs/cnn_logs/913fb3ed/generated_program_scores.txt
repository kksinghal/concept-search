5.5, 3.1349263, def cehccaeahjegebagaajchbhgbbcgdffd(I):
  objs = objects(I, T, F, T)
  O = I
  for obj in objs:
    c = color(obj)
    if c == EIGHT:
      O = underfill(O, FOUR, outbox(obj))
    if c == THREE:
      O = underfill(O, SIX, outbox(obj))
    if c == TWO:
      down_obj = shift(obj, DOWN)
      O = paint(O, recolor(TWO, down_obj))
      O = underfill(O, ONE, shift(down_obj, DOWN))
      O = underfill(O, TWO, shift(down_obj, double(DOWN)))
      O = underfill(O, ONE, shift(down_obj, astuple(THREE, ZERO)))
  return O
 
15.25, 30.670303, def bjfgddcijhiceaababceeeefbbebgcdg(I):
  objs = objects(I, T, F, T)
  O = I
  for obj in objs:
    c = color(obj)
    O = fill(O, 6, box(shift(obj, (-1, -1))))
    O = fill(O, 4, box(obj))
    O = paint(O, recolor(c, obj))
    if c == 3:
      O = paint(O, recolor(1, shift(obj, (2, 3))))
    if c == 2:
      O = paint(O, recolor(1, shift(obj, (2, 1))))
      O = paint(O, recolor(1, shift(obj, (1, 2))))
      O = paint(O, recolor(1, shift(obj, (3, 2))))
  return O
 
14.5, 23.638348, def djeajeebcbaeebjcjdbaeegecieaeggf(I):
  O = I
  for v in palette(I) - {mostcolor(I)}:
    obj = toobject(ofcolor(I, v), I)
    O = fill(O, 6, backdrop(shift(obj, (-1, -1))))
    O = underfill(O, 4, shift(box(obj), (1, 1)))
    O = paint(O, obj)
    if v in (2, 3):
      O = paint(O, recolor(1, shift(obj, (2, 1 + v - 2))))
      O = paint(O, recolor(1, shift(obj, (1 + v - 2, 2))))
  return O
 
14.75, 23.77244, def efahdcejceafedefjebedfegeeececfb(I):
  O = I
  for v in palette(I) - {mostcolor(I)}:
    obj = toobject(ofcolor(I, v), I)
    O = fill(O, 6, box(shift(obj, NEG_UNITY)))
    O = underfill(O, 4, shift(box(obj), UNITY))
    O = paint(O, obj)
    if v == 3:
      O = paint(O, recolor(1, shift(obj, (TWO, THREE))))
    elif v == 2:
      O = paint(O, recolor(1, shift(obj, ZERO_BY_TWO)))
      for i in range(1, THREE):
        O = paint(O, recolor(1, shift(obj, (i, TWO))))
  return O
 
23.75, 5.107283, def affbfebhfdecefhjifceajfdffbeecbg(I):
  objs = objects(I, T, F, T)
  bg = mostcolor(I)
  O = canvas(bg, shape(I))
  for i, obj in enumerate(objs):
    O = underpaint(O, recolor(i+1, shift(obj, (1, 1))))
    O = underpaint(O, recolor(i+len(objs)+1, inbox(shift(obj, (1, 1)))))
  return O
 
23.5, 4.9218564, def hgabccccidjaehheigfdefdeeagabead(I):
  objs = objects(I, T, F, T)
  O = I
  for i, obj in enumerate(objs):
    O = fill(O, i+1, shift(toindices(obj), (1, -1)))
    O = fill(O, i+len(objs)+1, outbox(shift(toindices(obj), (1, -1))))
  return O
 
15.75, 44.427002, def jdccidbibaaaeibdjcageiebgfgcadab(I):
  objs = objects(I, T, F, T)
  bg = mostcolor(I)
  O = canvas(bg, shape(I))
  for i, obj in enumerate(objs):
    O = paint(O, recolor(i+1, shift(obj, (-1, -1))))
    O = paint(O, recolor(i+len(objs)+1, box(shift(obj, (-1, -1)))))
  return O 
 
15.5, 42.9429, def acbdadfdfcebeaddjgdaffficghfhedb(I):
  objs = fgpartition(I)
  O = canvas(ZERO, shape(I))
  for i, obj in enumerate(objs):
    new_obj = shift(obj, (1, 1))
    O = paint(O, recolor(i+1, new_obj))
    for j, obj2 in enumerate(objs):
      if obj != obj2 and manhattan(obj, obj2) <= 2:
        O = paint(O, recolor(i+j+2, box(new_obj)))
  return O
 
14.0, 42.52262, def hiaddajbefadejafibeicbfafaiceabj(I):
    objs = objects(I, T, F, T)
    O = I
    for i, obj in enumerate(objs):
        for j, other_obj in enumerate(objs):
            if i != j:
                rel_pos = position(obj, other_obj)
                if rel_pos == (-1, 0):
                    O = fill(O, i + j + 1, shift(toindices(other_obj), DOWN))
    return O
 
15.25, 28.914501, def cecfaehfjaidebcdaccccabcdbjhadba(I):
    objs = objects(I, T, F, T)
    for obj in objs:
        value = color(obj)
        if value == EIGHT:
            center_index = center(obj)
            square_indices = backdrop(shift(initset(ORIGIN), center_index))
            I = fill(I, FOUR, square_indices)
        elif value == TWO:
            bottom_index = (lowermost(obj) + ONE, center(obj)[ONE])
            line_indices = frozenset({(bottom_index[ZERO] + i, bottom_index[ONE]) for i in range(THREE)})
            I = fill(I, ONE, line_indices)
        elif value == THREE:
            right_index = (center(obj)[ZERO], rightmost(obj) + ONE)
            line_indices = frozenset({(right_index[ZERO], right_index[ONE] + j) for j in range(THREE)})
            I = fill(I, SIX, line_indices)
    return I
 
16.75, 33.03291, def hdjafbbhedibegjgidadieceghcieaca(I):
    O = I
    for value, offset, fill_value in ((EIGHT, ORIGIN, FOUR), (THREE, ORIGIN, SIX), (TWO, DOWN, TWO)):
        obj = toobject(ofcolor(I, value), I)
        O = paint(O, recolor(fill_value, shift(obj, offset)))
        if value == TWO:
            for i in range(1, 4):
                O = underfill(O, branch(even(i), TWO, ONE), shift(obj, (i + 1, 0)))
    return O
 
15.75, 42.591312, def icjfhfabacbjeccebfbacefddfdbbcaa(I):
  objs = objects(I, T, F, T) 
  O = canvas(mostcolor(I), shape(I))
  for obj in objs:
    O = paint(O, obj) 
    O = fill(O, 6, corners(toindices(obj))) 
    O = fill(O, 1, box(toindices(obj)) - corners(toindices(obj))) 
  return O
 
16.0, 30.416723, def ihcgjfjfdcgieacficeajacdgcdafbbe(I):
    O = underfill(I, FOUR, mfilter(objects(I, T, F, T), lambda obj: color(obj) == EIGHT))
    O = underfill(O, SIX, mfilter(objects(O, T, F, T), lambda obj: color(obj) == THREE))
    O = paint(O, recolor(TWO, shift(toobject(ofcolor(O, TWO), O), DOWN)))
    O = underfill(O, ONE, shift(toobject(ofcolor(O, TWO), O), DOWN))
    O = underfill(O, ONE, shift(toobject(ofcolor(O, TWO), O), double(DOWN)))
    O = underfill(O, TWO, shift(toobject(ofcolor(O, TWO), O), (THREE, ZERO)))
    O = underfill(O, ONE, shift(toobject(ofcolor(O, TWO), O), (FOUR, ZERO)))
    return O
 
16.5, 29.001732, def ddbdjhfihdfbefadjaefgfefghbhhdfe(I):
    O = canvas(mostcolor(I), shape(I))
    for obj in objects(I, T, F, T):
        O = underfill(O, 6, box(shift(obj, (-1, -1))))
        O = underfill(O, 4, box(obj))
        O = underpaint(O, obj)
        if color(obj) == 3:
            O = paint(O, recolor(1, shift(obj, (1, 1))))
        elif color(obj) == 2:
            O = paint(O, recolor(1, shift(obj, (2, 1))))
            for d in (UP, DOWN):
                O = paint(O, recolor(1, shift(toindices(obj), add((2, 2), d))))
    return O
 
13.25, 33.826862, def dgffefihjbbhecheiddcdfgfacgfbcae(I):
  O = canvas(mostcolor(I), shape(I))
  for obj in objects(I, T, F, T):
    O = paint(O, obj)
    O = fill(O, 1, box(shift(obj, (1, 1)))) # Draw outline with '1'
    O = fill(O, 6, corners(shift(obj, (1, 1))))  # Highlight corners with '6'
  return O
 
11.75, 3.7383192, def feabbhfdeaifedeaibfjcfcbbbaeeefj(I):
  O = I
  for obj in objects(I, T, F, T):
    O = fill(O, 1, outbox(obj))  # Draw outer box with '1'
    O = fill(O, 6, corners(obj))  # Highlight corners with '6'
  return O
 
10.0, 3.480501, def djecfeafdecgejhiihihehdbgaiaefbh(I):
  O = canvas(mostcolor(I), shape(I)) 
  for obj in objects(I, T, F, T):
    O = underpaint(O, recolor(1, outbox(obj))) # Underpaint the outer box
    O = underpaint(O, recolor(6, corners(obj))) # Underpaint the corners
    O = paint(O, obj)  # Paint the object on top
  return O
 
16.0, 39.564262, def deiffhdfaabgegjbifhabehecefbebif(I):
    obj8 = next((obj for obj in objects(I, True, False, True) if color(obj) == 8), None)
    obj3 = next((obj for obj in objects(I, True, False, True) if color(obj) == 3), None)
    obj2 = next((obj for obj in objects(I, True, False, True) if color(obj) == 2), None)
    O = canvas(0, shape(I))
    if obj8:
        O = paint(O, obj8)
        O = paint(O, recolor(4, shift(toindices(obj8), (-1, 0))))
        O = paint(O, recolor(1, shift(toindices(obj8), (2, 0))))
        if obj2:
          O = paint(O, recolor(2, shift(toindices(obj2), (3, 3))))
    if obj3:
        O = paint(O, recolor(6, shift(toindices(obj3), (-1, -3))))
    return O
 
4.5, 3.5153942, def adfgiiiihbagebjebbeadjdbaceddafd(I):
  O = I
  for v in palette(I):
    if v == EIGHT:
      O = underfill(O, FOUR, outbox(toobject(ofcolor(I, v), I)))
    elif v == THREE:
      O = underfill(O, SIX, outbox(toobject(ofcolor(I, v), I)))
    elif v == TWO:
      obj = toobject(ofcolor(I, v), I)
      O = paint(O, recolor(TWO, shift(obj, DOWN)))
      O = underfill(O, ONE, shift(box(obj), DOWN))
      O = underfill(O, ONE, shift(box(obj), (TWO, ZERO)))
  return O 
 
9.0, 12.189241, def becifddfcgdieaebbhcfbhgjcaffcdge(I):
  O = canvas(mostcolor(I), shape(I)) # Create a canvas with the background color
  for obj in objects(I, T, F, T): # Iterate over non-background objects
    O = paint(O, recolor(4, outbox(obj))) # Draw the outline
    O = paint(O, recolor(6, corners(outbox(obj)))) # Highlight the corners
    O = paint(O, obj)  # Paint the original object back on top
  return O
 
11.75, 2.8226259, def ajcdbcfjgcffeiaijcadabhaicbadead(I):
  O = I # Start with the original grid
  for obj in objects(I, T, F, T):  # Iterate over non-background objects
    O = fill(O, 4, outbox(obj))  # Draw the outline
    O = fill(O, 6, corners(obj)) # Highlight the corners
  return O
 
14.0, 42.52262, def eficjdeiiidhebdhaaajcdeajfafbbbc(I):
  def draw_shape(color, target_color, shape_func):
    obj = next((o for o in objects(I, T, F, T) if color in palette(o) and target_color == mostcolor(o)), None)
    return fill(I, color, shape_func(obj)) if obj else I

  I = draw_shape(FOUR, EIGHT, lambda o: backdrop(shift(initset(ORIGIN), center(o))))
  I = draw_shape(ONE, TWO, lambda o: connect((lowermost(o) + ONE, center(o)[ONE]), (lowermost(o) + THREE, center(o)[ONE])))
  I = draw_shape(SIX, THREE, lambda o: backdrop(shift(initset(ORIGIN), center(o))))
  return I
 
15.75, 34.940357, def fdfdcfhdegeceaddbcecbdcafbjdhdbf(I):
    def draw_shape(target_color, color, shape_func):
        obj = next((o for o in objects(I, T, F, T) if target_color in palette(o) and target_color == mostcolor(o)), None)
        return fill(I, color, shape_func(obj)) if obj else I

    for target_color, color, shape_func in [(EIGHT, FOUR, lambda o: backdrop(shift(initset(ORIGIN), center(o)))),
                                          (TWO, ONE, lambda o: connect((lowermost(o) + ONE, center(o)[ONE]), (lowermost(o) + THREE, center(o)[ONE]))),
                                          (THREE, SIX, lambda o: backdrop(shift(initset(ORIGIN), center(o))))]:
        I = draw_shape(target_color, color, shape_func)
    return I
 
15.25, 41.017086, def gehifefgccdbegiaiggcabjfdcjcbdfc(I):
  O = replace(I, EIGHT, FOUR)
  O = replace(O, THREE, SIX)
  for obj in objects(I, T, F, T):
    if color(obj) == TWO:
      O = paint(O, recolor(TWO, shift(obj, DOWN)))
      O = underfill(O, ONE, box(obj))
      O = underfill(O, ONE, box(shift(obj, DOWN)))
  return O
 
4.0, 4.113918, def eaebdbebfbahedhfjdjaeaiffiddeddg(I):
  O = I
  for v in palette(I):
    if v == EIGHT:
      O = underfill(O, FOUR, outbox(toobject(ofcolor(I, v), I)))
    elif v == THREE:
      O = underfill(O, SIX, outbox(toobject(ofcolor(I, v), I)))
    elif v == TWO:
      obj = toobject(ofcolor(I, v), I)
      O = paint(O, recolor(TWO, shift(obj, DOWN)))
      O = underfill(O, ONE, shift(backdrop(obj), DOWN))
      O = underfill(O, ONE, backdrop(obj))
  return O
 
13.75, 27.150349, def degdibfcebfgeeicbagiaadjibjbajcg(I):
    O = canvas(mostcolor(I), shape(I))
    for obj in objects(I, T, F, T):
        O = paint(O, recolor(6, box(shift(obj, (-1, -1))))) 
        O = paint(O, recolor(4, box(obj)))
        O = paint(O, obj)
        c = color(obj)
        if c == 3:
            O = paint(O, recolor(1, shift(obj, (1, 1))))
        elif c == 2:
            s = shift(obj, (2, 1))
            O = paint(O, recolor(1, s))
            for d in (UP, DOWN):
                O = paint(O, recolor(1, shift(s, d)))
    return O
 
10.0, 3.0434868, def hfcbehdggahgeigdjdffegdjfaaeeeff(I):
  O = I 
  for obj in objects(I, T, F, T):
    O = underfill(O, 4, outbox(obj))  # Underfill outline with '4'
    O = underfill(O, 6, corners(outbox(obj)))  # Underfill corners with '6'
  return O
 
14.0, 40.728214, def cbajhbaficcaecjhjjcgdccefefaeabc(I):
  O = underfill(I, FOUR, delta(toobject(ofcolor(I, EIGHT), I)))
  O = underfill(O, SIX, delta(toobject(ofcolor(I, THREE), I)))
  for obj in objects(I, T, F, T):
    if color(obj) == TWO:
      shifted_obj = shift(obj, DOWN)
      O = paint(O, recolor(TWO, shifted_obj))
      O = paint(O, recolor(ONE, box(obj)))
      O = paint(O, recolor(ONE, box(shifted_obj)))
  return O 
 
16.75, 39.703068, def feefeefebfjbehdfbdcidafbfbiccfed(I):
  transformations = {
    8: lambda obj: (shift(obj, (-1, 0)), 4, shift(obj, (2, 0)), 1),
    3: lambda obj: (box(obj), 6, None, None),
    2: lambda obj: (shift(obj, (-2, 0)), 1, shift(obj, (2, 0)), 1)
  }

  O = canvas(0, shape(I))
  for obj in objects(I, True, False, True):
    original_color = color(obj)
    if original_color in transformations:
      transformed_patch, box_color, up_patch, up_color = transformations[original_color](obj)
      if box_color:
        O = paint(O, recolor(box_color, transformed_patch))
      if up_color:
        O = paint(O, recolor(up_color, up_patch))
  return O
 
21.75, 12.012028, def ggcefdcfdjbbeefjbceifbgifcaeaaed(I):
  objs = objects(I, T, F, T)
  new_objs = set()
  for obj in objs:
    ul = ulcorner(obj)
    new_objs.add(recolor(6, initset(ul)))
    new_objs.add(recolor(4, {(ul[0], ul[1] + 1), (ul[0], ul[1] + 2)}))
    new_objs.add(recolor(1, {(ul[0] + 1, ul[1] + 2), (ul[0] + 2, ul[1] + 1), (ul[0] + 2, ul[1])}))
  O = paint(I, merge(new_objs))
  return O
 
20.0, 12.204254, def bcebadaaeabdeeieiaeedfjjccbbbecc(I):
  def get_box(i, j):
    return {(i, j), (i, j + 1), (i, j + 2), (i + 1, j + 2), (i + 2, j + 1), (i + 2, j)}
  
  O = I
  for i in range(len(I) - 2):
    for j in range(len(I[0]) - 2):
      if I[i][j] != 0:
        for x, y in get_box(i, j):
          if I[x][y] == 0:
            O = fill(O, {
              (i, j): 6,
              (i, j + 1): 4,
              (i, j + 2): 4,
              (i + 1, j + 2): 1,
              (i + 2, j + 1): 1,
              (i + 2, j): 1
            }[(x, y)], {(x, y)})
  return O
 
4.0, 4.082465, def daffafjfefaaeiefibffacdbidbdcbcj(I):
  O = I
  for obj in objects(I, T, F, T):
    if color(obj) in (THREE, EIGHT):
      O = underfill(O, {THREE: SIX, EIGHT: FOUR}[color(obj)], outbox(obj))
    elif color(obj) == TWO:
      O = paint(O, recolor(ONE, box(obj)))
      O = paint(O, recolor(TWO, shift(obj, DOWN)))
      O = paint(O, recolor(ONE, box(shift(obj, DOWN))))
  return O
 
15.0, 27.82877, def gfdedibgdcbdegafjheddccbffgcgdff(I):
    O = canvas(mostcolor(I), shape(I))
    for obj in objects(I, T, F, T):
        O = paint(O, recolor(6, box(shift(obj, (-1, -1)))))  # Outline
        O = paint(O, recolor(4, box(obj)))                  # Box
        c = color(obj)
        if c == 3:
            obj = recolor(1, shift(obj, (1, 1)))            # Recolor and shift '3'
        elif c == 2:
            obj = recolor(1, shift(obj, (2, 1)))            # Recolor and shift '2'
            for d in (UP, DOWN):
                O = paint(O, recolor(1, shift(obj, d)))       # Duplicate and shift
        O = paint(O, recolor(1 if c in (2, 3) else c, obj)) # Paint & recolor
    return O
 
17.0, 27.229898, def bjcaedbebadaehfgjjjefafeeeadaccf(I):
  O = canvas(0, shape(I))
  for obj in objects(I, True, False, True):
    original_color = color(obj)
    O = paint(O, recolor(6, box(obj))) # Draw the outline
    if original_color == 2:
      down_color = 2
    else:
      down_color = 1
    O = paint(O, recolor(4, shift(obj, (-1, 0)))) # Upward shift and recolor
    O = paint(O, recolor(down_color, shift(obj, (2, 0)))) # Downward shift and recolor
  return O
 
16.75, 32.098106, def jeccfibjjahheefeafgfffbhgffcbbff(I):
  def process_object(obj):
    O = canvas(0, shape(I))
    O = paint(O, recolor(6, box(obj)))
    O = paint(O, recolor(4, shift(obj, (-1, 0))))
    O = branch(
      color(obj) == 2,
      paint(O, recolor(2, shift(obj, (2, 0)))),
      paint(O, recolor(1, shift(obj, (2, 0))))
    )
    return asobject(O)

  return paint(
    canvas(0, shape(I)),
    merge(apply(process_object, objects(I, True, False, True)))
  )
 
21.75, 8.342341, def eaabadjhbbbaeefbbgagdbabjcihiedb(I):
  def frame_object(obj):
    ul = ulcorner(obj)
    return recolor(6, frozenset((ul[0] + i, ul[1] + j) for i in range(3) for j in range(3)))
  
  def fill_frame(obj):
    ul = ulcorner(obj)
    return recolor(4, {(ul[0], ul[1] + 1), (ul[0], ul[1] + 2)}) | recolor(1, {(ul[0] + 2, ul[1] + 2)})
  
  O = I
  for obj in objects(I, T, F, T):
    O = paint(O, frame_object(obj))
    O = paint(O, fill_frame(obj))
  return O
 
18.25, 22.741737, def ifciddcceabeeheiifhcdbbhjdbieggd(I):
  def transform_cell(i, j, grid):
    for obj in objects(grid, T, F, T):
      ul = ulcorner(obj)
      if (i, j) == ul:
        return 6
      elif (i == ul[0] and j in (ul[1] + 1, ul[1] + 2)):
        return 4
      elif (i, j) == (ul[0] + 2, ul[1] + 2):
        return 1
    return grid[i][j]
  h, w = len(I), len(I[0])
  return tuple(tuple(transform_cell(i, j, I) for j in range(w)) for i in range(h))
 
21.5, 9.954769, def deddfbfhefifeghcbfbefcbjcfdfdccf(I):
    def frame_object(obj):
        ul = ulcorner(obj)
        return recolor(6, frozenset((ul[0] + i, ul[1] + j) for i in range(3) for j in range(3)))

    def fill_frame(obj):
        ul = ulcorner(obj)
        return recolor(4, {(ul[0], ul[1] + 1), (ul[0], ul[1] + 2)}) | recolor(1, {(ul[0] + 1, ul[1] + 2), (ul[0] + 2, ul[1] + 2)})

    O = I
    for obj in objects(I, T, F, T):
        O = paint(O, frame_object(obj))
        O = paint(O, fill_frame(obj))
    return O
 
18.0, 31.601286, def ffcdcaecgbabejdibcebdbajibdjedcf(I):
    def transform_object(obj):
        ul = ulcorner(obj)
        frame = recolor(6, frozenset((ul[0] + i, ul[1] + j) for i in range(3) for j in range(3)))
        fill_top = recolor(4, {(ul[0], ul[1] + 1), (ul[0], ul[1] + 2)})
        fill_right = recolor(1, {(ul[0] + 1, ul[1] + 2), (ul[0] + 2, ul[1] + 2)})
        return frame | fill_top | fill_right
    O = paint(I, merge(apply(lambda obj: shift(transform_object(obj), ulcorner(obj)), objects(I, T, F, T))))
    return O
 
20.0, 11.062845, def caeafdaccicdedecjdafhajjdieccajg(I):
    def transform_object(obj):
        ul = ulcorner(obj)
        return recolor(6, frozenset((ul[0] + i, ul[1] + j) for i in range(3) for j in range(3)) -
                   {(ul[0], ul[1]), (ul[0] + 1, ul[1] + 2), (ul[0] + 2, ul[1] + 2)}) | \
               recolor(4, {(ul[0], ul[1] + 1), (ul[0], ul[1] + 2)}) | \
               recolor(1, {(ul[0] + 1, ul[1] + 2), (ul[0] + 2, ul[1] + 2)})
    O = paint(I, merge(apply(lambda obj: transform_object(obj), objects(I, T, F, T))))
    return O
 
18.0, 30.994476, def jiecbacgcacdedidbdfaaaajgcjbcfhd(I):
  def transform_object(obj):
    ul = ulcorner(obj)
    return recolor(6, {(ul[0] + i, ul[1] + j) for i in range(3) for j in range(3) if i == 0 or (i == 1 and j in [0,2])}) | \
           recolor(4, {(ul[0] + 2, ul[1] + 1)}) | \
           recolor(1, {(ul[0] + 2, ul[1] + j) for j in [0,2]}) | \
           recolor(next(iter(obj))[0], {(ul[0] + 1, ul[1] + 1)})
  O = paint(I, merge(apply(lambda obj: shift(transform_object(obj), ulcorner(obj)), objects(I, T, F, T))))
  return O
 
22.25, 8.372216, def cdaaaijfchdcebceajcfidchdgfddibc(I):
  O = I
  for obj in objects(I, T, F, T):
    ul = ulcorner(obj)
    for i in range(3):
      for j in range(3):
        if i == 0 or (i == 1 and j in [0, 2]):
          O = paint(O, recolor(6, {(ul[0] + i, ul[1] + j)}))
        elif i == 2 and j == 1:
          O = paint(O, recolor(4, {(ul[0] + i, ul[1] + j)}))
        elif i == 2 and j in [0, 2]:
          O = paint(O, recolor(1, {(ul[0] + i, ul[1] + j)}))
        elif i == 1 and j == 1:
          O = paint(O, recolor(next(iter(obj))[0], {(ul[0] + i, ul[1] + j)}))
  return O
 
14.25, 42.66575, def hgegdgibagheeebjbegabgeaaceaibaj(I):
  O = I
  for obj in objects(I, T, F, T):
    ul = ulcorner(obj)
    temp_grid = canvas(6, (3, 3))
    temp_grid = fill(temp_grid, 4, {(2, 1)})
    temp_grid = fill(temp_grid, 1, {(2, 0), (2, 2)})
    temp_grid = fill(temp_grid, next(iter(obj))[0], {(1, 1)})
    O = paint(O, toobject(shift({(0,0)}, ul), temp_grid))
  return O
 
22.5, 5.8296623, def fdbdaechgdbdejffjfdcejjeffbabaja(I):
  O = I
  for obj in objects(I, T, F, T):
    ul = ulcorner(obj)
    if len(obj) == 1:
      O = paint(O, recolor(4, {(ul[0] + i, ul[1] + j) for i in range(3) for j in range(3)}))
    else:
      O = paint(O, recolor(6, {(ul[0] + i, ul[1] + j) for i in range(3) for j in range(3) if i == 0 or (i == 1 and j in [0,2])}))
      O = paint(O, recolor(4, {(ul[0] + 2, ul[1] + 1)}))
      O = paint(O, recolor(1, {(ul[0] + 2, ul[1] + j) for j in [0, 2]}))
      O = paint(O, recolor(next(iter(obj))[0], {(ul[0] + 1, ul[1] + 1)}))
  return O
 
11.75, 4.4014783, def abheifciadbeecbdafcbabidifgfaebi(I):
  O = I 
  for obj in objects(I, T, F, T):
    ul = ulcorner(obj)
    if size(obj) == 1:
      for i in range(3):
        for j in range(3):
          O = paint(O, recolor(4, {(ul[0] - 1 + i, ul[1] - 1 + j)}))
    else:
      for i in range(3):
        for j in range(3):
          if i == 0 or (i == 1 and j in [0, 2]):
            O = paint(O, recolor(6, {(ul[0] - 1 + i, ul[1] - 1 + j)}))
      O = paint(O, recolor(1, {(ul[0] + 1, ul[1] + j) for j in range(3)}))
  return O 
 
5.5, 3.2459617, def feejhjcbbdbgejgdihgdgbbfcbdbebec(I):
  O = canvas(mostcolor(I), shape(I))
  for obj in objects(I, T, F, T):
    c = color(obj)
    if c == EIGHT:
      O = underpaint(O, recolor(FOUR, outbox(obj)))
    if c == THREE:
      O = underpaint(O, recolor(SIX, outbox(obj)))
    if c == TWO:
      O = paint(O, recolor(TWO, shift(obj, DOWN)))
      for i in range(2,5,2):
        O = underpaint(O, recolor(TWO, shift(obj, (i,0))))
      for i in range(3,5,2):
        O = underpaint(O, recolor(ONE, shift(obj, (i,0)))) 
    O = paint(O, obj) 
  return O
 
4.5, 3.118289, def befjaabhjcefeccabbbeggaefjegfhda(I):
  O = I
  for obj in objects(I, T, F, T):
    if color(obj) == EIGHT:
      O = fill(O, FOUR, difference(outbox(obj), obj))
    if color(obj) == THREE:
      O = fill(O, SIX, difference(outbox(obj), obj))
    if color(obj) == TWO:
      for i in range(1,4):
        O = underpaint(O, recolor(branch(even(i),TWO,ONE), shift(obj, (i,0))))
  return O
 
14.5, 35.343075, def afbdbbbbcdfhecddaebfjfcfaeiejfbh(I):
  O = canvas(mostcolor(I), shape(I))
  for obj in objects(I, T, F, T):
    if color(obj) == EIGHT:
      O = paint(O, recolor(FOUR, box(obj))) 
    if color(obj) == THREE:
      O = paint(O, recolor(SIX, box(obj)))
    if color(obj) == TWO:
      for i in range(1, 4):
        O = underpaint(O, recolor(ONE if i % 2 else TWO, shift(obj, (i, 0))))
    O = paint(O, obj)
  return O
 
15.0, 34.962875, def cdihjeaddfifeibebhajafgbbfbcbcja(I):
    O = I
    for obj in objects(I, T, F, T):
        if color(obj) == EIGHT:
            O = fill(O, FOUR, delta(obj))
        if color(obj) == THREE:
            O = fill(O, SIX, delta(obj))
        if color(obj) == TWO:
            O = paint(O, recolor(TWO, shift(obj, (1, 0))))
            O = underfill(O, ONE, shift(obj, (2, 0)))
            O = underfill(O, TWO, shift(obj, (3, 0)))
    return O
 
4.0, 4.113918, def egbaebhdadbceifjafiaihiccgaebddf(I):
  O = I
  for v in palette(I):
    if v == EIGHT:
      O = underfill(O, FOUR, outbox(toobject(ofcolor(I, v), I)))
    elif v == THREE:
      O = underfill(O, SIX, outbox(toobject(ofcolor(I, v), I)))
    if v == TWO or v == THREE:
      obj = toobject(ofcolor(I, v), I)
      if v == TWO:
        O = paint(O, recolor(TWO, shift(obj, DOWN)))
      O = underfill(O, ONE, box(obj))
  return O
 
4.5, 4.0032687, def edhfbggdcadfebdgajcbbdcbbafcjfcb(I):
  O = fill(I, mostcolor(I), asindices(I)) 
  for obj in objects(I, T, F, T):
    if color(obj) == EIGHT:
      O = paint(O, recolor(FOUR, outbox(obj)))
      O = paint(O, obj)
    elif color(obj) == THREE:
      O = paint(O, recolor(SIX, outbox(obj)))
      O = paint(O, obj)
    elif color(obj) == TWO:
      O = paint(O, recolor(ONE, box(obj) | box(shift(obj, DOWN))))
      O = paint(O, recolor(TWO, shift(obj, DOWN)))
  return O
 
11.75, 6.620131, def bjiehajahagheefciaffcbjfjhfechdb(I):
  O = I
  for obj in objects(I, T, F, T):
    O = paint(fill(O, 4, outbox(obj)), recolor(4, obj)) 
    O = paint(fill(O, 6, inbox(obj)), recolor(6, obj))
    center_j = centerofmass(obj)[1]
    O = fill(O, 1, {(lowermost(obj) + 1, center_j)})
    O = fill(O, 2, {(lowermost(obj) + 1, center_j + 2)})
    O = fill(O, 1, {(lowermost(obj) + 1, j) for j in range(center_j + 1, center_j + 2)})
  return O 
 
0.0, 0.0, def ffjfeafiebegejieajbccgddjdbadhde(I):
  O = canvas(mostcolor(I), shape(I)) # Initialize with background color
  for obj in objects(I, T, F, T):
    if color(obj) == EIGHT:
      O = underfill(O, FOUR, outbox(obj))
    elif color(obj) == THREE:
      O = underfill(O, SIX, outbox(obj))
    O = underfill(O, ONE, outbox(obj)) # Outline after color-specific outlining
    O = paint(O, obj)  # Paint the original object
  return O
 
